//
//  OscillatorTests.swift
//  SimpleSDR3Tests
//
//  Test data from liquid-dsp-1.3.2/src/nco/tests/data/nco_sincos_fsqrt1_*.c
//
//  Created by Andy Hooper on 2021-01-19.
//  Copyright Â© 2021 Andy Hooper. All rights reserved.
//

import XCTest
import struct Accelerate.vecLib.vDSP.DSPComplex
@testable import sdrlib

class OscillatorTests: XCTestCase {
    
    func frequencyTest(_ frequency:Float, _ Y:[DSPComplex], _ tol:Float) {
        let f = frequency/(2*Float.pi)
        
        let n = Oscillator<ComplexSamples>(signalHz:Double(f), sampleHz:1, level:1.0)
        n.generate(Y.count)
        AssertEqual(n.produceBuffer, Y, accuracy:tol)
        
        let r = Oscillator<RealSamples>(signalHz:Double(f), sampleHz:1, level:1.0)
        r.generate(Y.count)
        AssertEqual(r.produceBuffer, Y.map{$0.real}, accuracy:tol)
        //print(frequency, r.produceBuffer)
    }
    
    let nco_sincos_fsqrt1_2:[DSPComplex] = [
        DSPComplex(  1.000000000000,  0.000000000000),
        DSPComplex(  0.760244597076,  0.649636939080),
        DSPComplex(  0.155943694765,  0.987765945993),
        DSPComplex( -0.523133894289,  0.852250508152),
        DSPComplex( -0.951363128126,  0.308071742363),
        DSPComplex( -0.923403461740, -0.383830752866),
        DSPComplex( -0.452661857292, -0.891682254479),
        DSPComplex(  0.235135999123, -0.971962479686),
        DSPComplex(  0.810183603115, -0.586176193003),
        DSPComplex(  0.996739414692,  0.080687912355),
        DSPComplex(  0.705347906308,  0.708861291838),
        DSPComplex(  0.075734454968,  0.997128022037),
        DSPComplex( -0.590194485905,  0.807261090854),
        DSPComplex( -0.973118793234,  0.230303743466),
        DSPComplex( -0.889422123833, -0.457086737542),
        DSPComplex( -0.379237935093, -0.925299188688),
        DSPComplex(  0.312794941512, -0.949820680215),
        DSPComplex(  0.854839263647, -0.518892891961),
        DSPComplex(  0.986978921600,  0.160849645067),
        DSPComplex(  0.645851521500,  0.763463039168),
        DSPComplex( -0.004968662133,  0.999987656122),
        DSPComplex( -0.653406318582,  0.757007386250),
        DSPComplex( -0.988528584662,  0.151033894564),
        DSPComplex( -0.849640712505, -0.527361981615),
        DSPComplex( -0.303340937614, -0.952882089016),
        DSPComplex(  0.388414094720, -0.921484938034),
        DSPComplex(  0.893920371491, -0.448225801838),
        DSPComplex(  0.970782170565,  0.239962449800),
        DSPComplex(  0.582143428727,  0.813086113761),
        DSPComplex( -0.085639377739,  0.996326200087),
        DSPComplex( -0.712357177173,  0.701817107322),
        DSPComplex( -0.997492012529,  0.070779127866),
        DSPComplex( -0.804318649129, -0.594198208230),
        DSPComplex( -0.225465802126, -0.974251082664),
        DSPComplex(  0.461500333346, -0.887140035351),
        DSPComplex(  0.927172072075, -0.374635754786),
        DSPComplex(  0.948254783364,  0.317510418456),
        DSPComplex(  0.514639079331,  0.857406915079),
        DSPComplex( -0.165751624352,  0.986167530912),
        DSPComplex( -0.766662633072,  0.642050159295),
        DSPComplex( -0.999950624793, -0.009937201600),
        DSPComplex( -0.753751486611, -0.657159566948),
        DSPComplex( -0.146120365674, -0.989266818778),
        DSPComplex(  0.531577049558, -0.847009941136),
        DSPComplex(  0.954377525386, -0.298602644058),
        DSPComplex(  0.919543664932,  0.392987847501),
        DSPComplex(  0.443778680694,  0.896136419616),
        DSPComplex( -0.244782976343,  0.969577895010),
        DSPComplex( -0.815968551135,  0.578096292635),
        DSPComplex( -0.995888388425, -0.090588728879),
        DSPComplex( -0.698268982046, -0.715835476008),
        DSPComplex( -0.065822053387, -0.997831377181),
        DSPComplex(  0.598187261134, -0.801356350581),
        DSPComplex(  0.975359320021, -0.220622294542),
        DSPComplex(  0.884836045372,  0.465902535742),
        DSPComplex(  0.370024325563,  0.929022065665),
        DSPComplex( -0.322218056780,  0.946665476229),
        DSPComplex( -0.859953399058,  0.510372561418),
        DSPComplex( -0.985331793961, -0.170649511602),
        DSPComplex( -0.638232946313, -0.769843299796),
        DSPComplex(  0.014905495740, -0.999888906928),
        DSPComplex(  0.660896591520, -0.750476978539),
        DSPComplex(  0.989980630117, -0.141203229401),
        DSPComplex(  0.844358258992,  0.535778994056),
        DSPComplex(  0.293856978673,  0.955849400316),
        DSPComplex( -0.397551898294,  0.917579690361),
        DSPComplex( -0.898330344143,  0.439320603650),
        DSPComplex( -0.968349682754, -0.249597459743),
        DSPComplex( -0.574034884644, -0.818830844077),
        DSPComplex(  0.095535843587, -0.995425990514),
        DSPComplex(  0.719296102472, -0.694703618076),
        DSPComplex(  0.998146107617, -0.060863353909),
        DSPComplex(  0.798374268344,  0.602161546138),
        DSPComplex(  0.215773340288,  0.976443477945),
        DSPComplex( -0.470293236050,  0.882510210777),
        DSPComplex( -0.930849123784,  0.365403761270),
        DSPComplex( -0.945052798049, -0.326917740264),
        DSPComplex( -0.506093443552, -0.862478652718),
        DSPComplex(  0.175543185898, -0.984471731379),
        DSPComplex(  0.773004960816, -0.634399976792),
        DSPComplex(  0.999802504049,  0.019873421897),
        DSPComplex(  0.747183942875,  0.664617300038),
        DSPComplex(  0.136282607136,  0.990670001056),
        DSPComplex( -0.539967711374,  0.841685731538),
        DSPComplex( -0.957297677470,  0.289104058618),
        DSPComplex( -0.915593062806, -0.402106134423),
        DSPComplex( -0.434851680767, -0.900502090911),
        DSPComplex(  0.254405781142, -0.967097564117),
        DSPComplex(  0.821672921923, -0.569959305019),
        DSPComplex(  0.994939017768,  0.100480599729),
        DSPComplex(  0.691121103433,  0.722738971129),
        DSPComplex(  0.055903151852,  0.998436196065),
        DSPComplex( -0.606120965124,  0.795372476037),
        DSPComplex( -0.977503529671,  0.210919059075),
        DSPComplex( -0.880162588986, -0.474672325874),
        DSPComplex( -0.360774175978, -0.932653201328),
        DSPComplex(  0.331609352882, -0.943416788636),
        DSPComplex(  0.864982613715, -0.501801831374),
        DSPComplex(  0.983587364400,  0.180432526426),
        DSPComplex(  0.630551345359,  0.776147538079),
        DSPComplex( -0.024840857424,  0.999691418290),
        DSPComplex( -0.668321600646,  0.743872460917),
        DSPComplex( -0.991334914576,  0.131358620360),
        DSPComplex( -0.838992424751, -0.544143098100),
        DSPComplex( -0.284344001234, -0.958722321093),
        DSPComplex(  0.406650443454, -0.913583831314),
        DSPComplex(  0.902651606302, -0.430372022371),
        DSPComplex(  0.965821570012,  0.259207821834),
        DSPComplex(  0.565869654379,  0.824494714509),
        DSPComplex( -0.105422875231,  0.994427482212),
        DSPComplex( -0.726163996983,  0.687521526561),
        DSPComplex( -0.998701635364,  0.050941569671),
        DSPComplex( -0.792351047769, -0.610065420344),
        DSPComplex( -0.206059570743, -0.978539449029),
        DSPComplex(  0.479039697103, -0.877793237955),
        DSPComplex(  0.934434253757, -0.356135683981),
        DSPComplex(  0.941757488380,  0.336292778810),
        DSPComplex(  0.497497830836,  0.867465220233),
        DSPComplex( -0.185317412481,  0.982678714856),
        DSPComplex( -0.779270954001,  0.626687147028),
        DSPComplex( -0.999555652393, -0.029807679686),
        DSPComplex( -0.740542614416, -0.672009401894),
        DSPComplex( -0.126431390635, -0.991975354261),
        DSPComplex(  0.548305051154, -0.836278405125),
        DSPComplex(  0.960123296014, -0.279576924033),
        DSPComplex(  0.911552045487,  0.411184713198),
        DSPComplex(  0.425881739056,  0.904778837252),
        DSPComplex( -0.264003463266,  0.964521731940),
        DSPComplex( -0.827296152171,  0.561766033686),
        DSPComplex( -0.993891396472, -0.110362548078),
        DSPComplex( -0.683904976326, -0.729571095478),
        DSPComplex( -0.045978729857, -0.998942418962),
        DSPComplex(  0.613994814417, -0.789310058132),
        DSPComplex(  0.979551210443, -0.201194995263),
        DSPComplex(  0.875402216180,  0.483395241917),
        DSPComplex(  0.351488399794,  0.936192237102),
        DSPComplex( -0.340967902424,  0.940074938245),
        DSPComplex( -0.869926410981,  0.493181548192),
        DSPComplex( -0.981745805180, -0.190197723464),
        DSPComplex( -0.622807477199, -0.782375131472),
        DSPComplex(  0.034773766063, -0.999395209711),
        DSPComplex(  0.675680612738, -0.737194485581),
        DSPComplex(  0.992591304302, -0.121501039602),
        DSPComplex(  0.833543739662,  0.552453467788),
        DSPComplex(  0.274802944706,  0.961500567644),
        DSPComplex( -0.415708831715,  0.909497755486),
        DSPComplex( -0.906883731242,  0.421380941677),
        DSPComplex( -0.963198081990, -0.268792587045),
        DSPComplex( -0.557648544251, -0.830077165747),
        DSPComplex(  0.115299496322, -0.993330773785),
        DSPComplex(  0.732960182500, -0.680271542011),
        DSPComplex(  0.999158540912, -0.041014754931),
        DSPComplex(  0.786249582201,  0.617909050337),
        DSPComplex(  0.196325452731,  0.980538788937),
        DSPComplex( -0.487738852787,  0.872989582688),
        DSPComplex( -0.937927107962,  0.346832438147),
        DSPComplex( -0.938369179770, -0.345634608305),
        DSPComplex( -0.488853090003, -0.872366125199),
        DSPComplex(  0.195073338893, -0.980788658404),
        DSPComplex(  0.785459993857, -0.618912431650),
        DSPComplex(  0.999210094204,  0.039738993954),
        DSPComplex(  0.733828157068,  0.679335142543),
        DSPComplex(  0.116567688981,  0.993182749491),
        DSPComplex( -0.556588245585,  0.830788495874),
        DSPComplex( -0.962854101984,  0.270022181112),
        DSPComplex( -0.907421012027, -0.420222687313),
        DSPComplex( -0.416869741348, -0.908966236308),
        DSPComplex(  0.273575074938, -0.961850652842),
        DSPComplex(  0.832837686581, -0.553517287725),
        DSPComplex(  0.992745627990,  0.120233598080),
        DSPComplex(  0.676621313319,  0.736331174379),
        DSPComplex(  0.036049767444,  0.999349995881),
        DSPComplex( -0.621808031469,  0.783169695533),
        DSPComplex( -0.981502160129,  0.191451063363),
        DSPComplex( -0.870555397043, -0.492070422480),
        DSPComplex( -0.342167913985, -0.939638823506),
        DSPComplex(  0.350292781243, -0.936640255065),
        DSPComplex(  0.874784302655, -0.484512563128),
        DSPComplex(  0.979807298156,  0.199944138398),
        DSPComplex(  0.615002106542,  0.788525464997),
        DSPComplex( -0.044703240778,  0.999000310442),
        DSPComplex( -0.682972901089,  0.730443711985),
        DSPComplex( -0.993749675226,  0.111631460566),
        DSPComplex( -0.828012741783, -0.560709282467),
        DSPComplex( -0.265234751275, -0.964183865617),
        DSPComplex(  0.424726168556, -0.905321866379),
        DSPComplex(  0.911026301038, -0.412348249441),
        DSPComplex(  0.960479477760,  0.278350808877),
        DSPComplex(  0.549372366100,  0.835577646521),
        DSPComplex( -0.125164731540,  0.992135973533),
        DSPComplex( -0.739683987895,  0.672954380365),
        DSPComplex( -0.999516779141,  0.031083889968),
        DSPComplex( -0.780070474162, -0.625691661556),
        DSPComplex( -0.186571947499, -0.982441300235),
        DSPComplex(  0.496389844059, -0.868099719338),
        DSPComplex(  0.941327341476, -0.337494942465),
        DSPComplex(  0.934888206815,  0.354942306239),
        DSPComplex(  0.480160074725,  0.877180883649),
        DSPComplex( -0.204810001732,  0.978801748665),
        DSPComplex( -0.791571469213,  0.611076598413),
        DSPComplex( -0.998765863605, -0.049666383980),
        DSPComplex( -0.727041233885, -0.686593798567),
        DSPComplex( -0.106692476220, -0.994292067512),
        DSPComplex(  0.564816476695, -0.825216545916),
        DSPComplex(  0.965489825714, -0.260440773388),
        DSPComplex(  0.903200370366,  0.429219164264),
        DSPComplex(  0.407816577581,  0.913063874573),
        DSPComplex( -0.283119670959,  0.959084590595),
        DSPComplex( -0.838296977925,  0.545213881703),
        DSPComplex( -0.991501825466, -0.130092774964),
        DSPComplex( -0.669270833677, -0.743018540273),
        DSPComplex( -0.026117245101, -0.999658886575),
        DSPComplex(  0.629559844720, -0.776951994602),
        DSPComplex(  0.983356186070, -0.181688225591),
        DSPComplex(  0.865622610200,  0.500697010886),
        DSPComplex(  0.332813638953,  0.942992620187),
        DSPComplex( -0.359583068506,  0.933113078273),
        DSPComplex( -0.879555809016,  0.475795732248),
        DSPComplex( -0.977772034756, -0.209670808766),
        DSPComplex( -0.607136004174, -0.794597931306),
        DSPComplex(  0.054628301030, -0.998506759480),
        DSPComplex(  0.690197745585, -0.723620806770),
        DSPComplex(  0.994809912959, -0.101750857877),
        DSPComplex(  0.822399977304,  0.568909726873),
        DSPComplex(  0.255640365802,  0.966771950034),
        DSPComplex( -0.433701563513,  0.901056576363),
        DSPComplex( -0.915078906610,  0.403274837644),
        DSPComplex( -0.957666025784, -0.287881543451),
        DSPComplex( -0.541041937199, -0.840995613658),
        DSPComplex(  0.135017606689, -0.990843199444),
        DSPComplex(  0.746334749190, -0.665570764195),
        DSPComplex(  0.999776314675, -0.021149955457),
        DSPComplex(  0.773814333841,  0.633412485465),
        DSPComplex(  0.176800018209,  0.984246795047),
        DSPComplex( -0.504991816627,  0.863124130783),
        DSPComplex( -0.944634618526,  0.328124119019),
        DSPComplex( -0.931314913263, -0.364214953474),
        DSPComplex( -0.471419643442, -0.881909020125),
        DSPComplex(  0.214526439499, -0.976718181850),
        DSPComplex(  0.797604776560, -0.603180421109),
        DSPComplex(  0.998223004463,  0.059588869430),
        DSPComplex(  0.720182515080,  0.693784653169),
        DSPComplex(  0.096806727533,  0.995303198781),
        DSPComplex( -0.572988931946,  0.819563105482),
        DSPComplex( -0.968030206924,  0.250833647030),
        DSPComplex( -0.898890537295, -0.438173255644),
        DSPComplex( -0.398723141757, -0.917071347403),
        DSPComplex(  0.292636308795, -0.956223818347),
        DSPComplex(  0.843673487096, -0.536856635585),
        DSPComplex(  0.990160111727,  0.139939105133),
        DSPComplex(  0.661854263264,  0.749632532778),
        DSPComplex(  0.016182143669,  0.999869060541),
        DSPComplex( -0.637249488677,  0.770657569340),
        DSPComplex( -0.985113105181,  0.171907446032),
        DSPComplex( -0.860604342767, -0.509274155254),
        DSPComplex( -0.323426498437, -0.946253295957)]
    
    let nco_sincos_fsqrt1_3:[DSPComplex] = [
        DSPComplex(  1.000000000000,  0.000000000000),
        DSPComplex(  0.837911827695,  0.545805614673),
        DSPComplex(  0.404192461982,  0.914673960314),
        DSPComplex( -0.160556538575,  0.987026644990),
        DSPComplex( -0.673256907353,  0.739408639861),
        DSPComplex( -0.967703312923,  0.252091844688),
        DSPComplex( -0.948443195842, -0.316947163201),
        DSPComplex( -0.621720230463, -0.783239398290),
        DSPComplex( -0.093450273402, -0.995623948286),
        DSPComplex(  0.465114051693, -0.885250766121),
        DSPComplex(  0.872899403683, -0.487900226531),
        DSPComplex(  0.997711417775,  0.067616025029),
        DSPComplex(  0.799088991477,  0.601212760759),
        DSPComplex(  0.341420816904,  0.939910541373),
        DSPComplex( -0.226927910067,  0.973911558424),
        DSPComplex( -0.721711976662,  0.692193486492),
        DSPComplex( -0.982534092802,  0.186082660346),
        DSPComplex( -0.924841898283, -0.380351762426),
        DSPComplex( -0.567337837836, -0.823485141190),
        DSPComplex( -0.025916270960, -0.999664117041),
        DSPComplex(  0.523906737901, -0.851775633592),
        DSPComplex(  0.903891575553, -0.427761638818),
        DSPComplex(  0.990856146318,  0.134922560393),
        DSPComplex(  0.756608593536,  0.653868057170),
        DSPComplex(  0.277086432600,  0.960844997317),
        DSPComplex( -0.292260595196,  0.956338718496),
        DSPComplex( -0.766863651569,  0.641810049705),
        DSPComplex( -0.992867652562,  0.119221745066),
        DSPComplex( -0.897007447265, -0.442015429086),
        DSPComplex( -0.510358646627, -0.859961657176),
        DSPComplex(  0.041736354516, -0.999128658738),
        DSPComplex(  0.580301416814, -0.814401783915),
        DSPComplex(  0.930746487037, -0.365665115738),
        DSPComplex(  0.979465563334,  0.201611533010),
        DSPComplex(  0.710665073638,  0.703530491955),
        DSPComplex(  0.211483778128,  0.977381507697),
        DSPComplex( -0.356255555520,  0.934388558985),
        DSPComplex( -0.808505265432,  0.588488942775),
        DSPComplex( -0.998656693799,  0.051815132253),
        DSPComplex( -0.865067245650, -0.501655918438),
        DSPComplex( -0.451043459964, -0.892501987238),
        DSPComplex(  0.109197945833, -0.994020024258),
        DSPComplex(  0.634039960711, -0.773300283345),
        DSPComplex(  0.953341218789, -0.301894883291),
        DSPComplex(  0.963591805394,  0.267377696485),
        DSPComplex(  0.661468722830,  0.749972751984),
        DSPComplex(  0.144913127625,  0.989444382187),
        DSPComplex( -0.418619875580,  0.908161549379),
        DSPComplex( -0.846446217737,  0.532474225177),
        DSPComplex( -0.999874719120, -0.015828646941),
        DSPComplex( -0.829167488991, -0.559000246154),
        DSPComplex( -0.389663773211, -0.920957188933),
        DSPComplex(  0.176159720196, -0.984361596661),
        DSPComplex(  0.684876399442, -0.728659260209),
        DSPComplex(  0.971572351007, -0.236742828316),
        DSPComplex(  0.943307529299,  0.331920028273),
        DSPComplex(  0.609244720899,  0.792982263393),
        DSPComplex(  0.077679185906,  0.996978407026),
        DSPComplex( -0.479068103627,  0.877777735015),
        DSPComplex( -0.880512846507,  0.474022285486),
        DSPComplex( -0.996516153423, -0.083399975816),
        DSPComplex( -0.789472496379, -0.613785937817),
        DSPComplex( -0.326500531288, -0.945197018123),
        DSPComplex(  0.242315182549, -0.970197584158),
        DSPComplex(  0.732578046264, -0.680683043811),
        DSPComplex(  0.985356436799, -0.170507162484),
        DSPComplex(  0.918705579515,  0.394943107508),
        DSPComplex(  0.554232105691,  0.832362164578),
        DSPComplex(  0.010089693778,  0.999949097744),
        DSPComplex( -0.537323558182,  0.843376187607),
        DSPComplex( -0.910549223177,  0.413400667841),
        DSPComplex( -0.988596369416, -0.150589569286),
        DSPComplex( -0.746163958323, -0.665762230305),
        DSPComplex( -0.261842842740, -0.965110525124),
        DSPComplex(  0.307361528464, -0.951592817764),
        DSPComplex(  0.776926562896, -0.629591229184),
        DSPComplex(  0.994630384139, -0.103491057329),
        DSPComplex(  0.889898563214,  0.456158467191),
        DSPComplex(  0.496682678992,  0.867932207254),
        DSPComplex( -0.057545980537,  0.998342857001),
        DSPComplex( -0.593119594448,  0.805114368697),
        DSPComplex( -0.936417866314,  0.350886847356),
        DSPComplex( -0.976151617251, -0.217089889533),
        DSPComplex( -0.699440105123, -0.714691219581),
        DSPComplex( -0.195986656442, -0.980606562540),
        DSPComplex(  0.371001030117, -0.928632454555),
        DSPComplex(  0.817718958886, -0.575617671966),
        DSPComplex(  0.999351744645, -0.036001256586),
        DSPComplex(  0.857018334845,  0.515285914556),
        DSPComplex(  0.436859853992,  0.899529581487),
        DSPComplex( -0.124918257436,  0.992167036824),
        DSPComplex( -0.646200824792,  0.763167408920),
        DSPComplex( -0.958000370884,  0.286766960067),
        DSPComplex( -0.959238858607, -0.282596553655),
        DSPComplex( -0.649514799540, -0.760348949614),
        DSPComplex( -0.129233406987, -0.991614202459),
        DSPComplex(  0.432942399044, -0.901421587888),
        DSPComplex(  0.854768520727, -0.519009418002),
        DSPComplex(  0.999498907872,  0.031653327829),
        DSPComplex(  0.820215392622,  0.572054813550),
        DSPComplex(  0.375037449599,  0.927009660898),
        DSPComplex( -0.191718762927,  0.981449904958),
        DSPComplex( -0.696324287694,  0.717727306410),
        DSPComplex( -0.975197950213,  0.221334493244),
        DSPComplex( -0.937935505961, -0.346809726878),
        DSPComplex( -0.596616557906, -0.802526437466),
        DSPComplex( -0.061888634976, -0.998083061103),
        DSPComplex(  0.492902119414, -0.870084766375),
        DSPComplex(  0.887905666482, -0.460025572582),
        DSPComplex(  0.995071200231,  0.099163029757),
        DSPComplex(  0.779658189663,  0.626205323590),
        DSPComplex(  0.311498437124,  0.950246664645),
        DSPComplex( -0.257641740113,  0.966240515478),
        DSPComplex( -0.743260559821,  0.669002047989),
        DSPComplex( -0.987931888154,  0.154888942047),
        DSPComplex( -0.912339068261, -0.409435494949),
        DSPComplex( -0.540987504175, -0.841030629839),
        DSPComplex(  0.005739411495, -0.999983529442),
        DSPComplex(  0.550605745726, -0.834765423801),
        DSPComplex(  0.916978721986, -0.398936114465),
        DSPComplex(  0.986088888068,  0.166218846191),
        DSPComplex(  0.735532362955,  0.677489588884),
        DSPComplex(  0.246533645077,  0.969134233141),
        DSPComplex( -0.322385448685,  0.946608484262),
        DSPComplex( -0.786794806137,  0.617214657178),
        DSPComplex( -0.996143899378,  0.087734438690),
        DSPComplex( -0.882566704612, -0.470187209428),
        DSPComplex( -0.482882261671, -0.875685286712),
        DSPComplex(  0.073341187736, -0.997306908720),
        DSPComplex(  0.605789158993, -0.795625222606),
        DSPComplex(  0.941854615084, -0.336020660147),
        DSPComplex(  0.972593084902,  0.232513851631),
        DSPComplex(  0.688039883664,  0.725672872917),
        DSPComplex(  0.180440427994,  0.983585914877),
        DSPComplex( -0.385653546043,  0.922643670343),
        DSPComplex( -0.826727763238,  0.562602173380),
        DSPComplex( -0.999796396159,  0.020178360380),
        DSPComplex( -0.848754688019, -0.528786799727),
        DSPComplex( -0.422566787646, -0.906331788022),
        DSPComplex(  0.140607269299, -0.990065450271),
        DSPComplex(  0.658199775658, -0.752843313927),
        DSPComplex(  0.962419484720, -0.271567184010),
        DSPComplex(  0.954645563245,  0.297744602936),
        DSPComplex(  0.637398132678,  0.770534632874),
        DSPComplex(  0.113521305399,  0.993535562132),
        DSPComplex( -0.447156443700,  0.894455764618),
        DSPComplex( -0.862876651411,  0.505414566915),
        DSPComplex( -0.998872660419, -0.047470077604),
        DSPComplex( -0.811057781641, -0.584966045886),
        DSPComplex( -0.360317155943, -0.932829859692),
        DSPComplex(  0.207229768268, -0.978292299440),
        DSPComplex(  0.707597703708, -0.706615517595),
        DSPComplex(  0.978579202106, -0.205870700212),
        DSPComplex(  0.932328471853,  0.361612528228),
        DSPComplex(  0.583838905619,  0.811869529102),
        DSPComplex(  0.046082577121,  0.998937633732),
        DSPComplex( -0.506612632779,  0.862173787765),
        DSPComplex( -0.895076011251,  0.445913594861),
        DSPComplex( -0.993376920248, -0.114901237236),
        DSPComplex( -0.769648530419, -0.638467806255),
        DSPComplex( -0.296418293364, -0.955058215691),
        DSPComplex(  0.272903742509, -0.962041343875),
        DSPComplex(  0.753756840705, -0.657153425837),
        DSPComplex(  0.990259801557, -0.139231912364),
        DSPComplex(  0.905743959725,  0.423825293512),
        DSPComplex(  0.527607351878,  0.849488364985),
        DSPComplex( -0.021567078691,  0.999767403508),
        DSPComplex( -0.563749972526,  0.825945499701),
        DSPComplex( -0.923178460993,  0.384371602954),
        DSPComplex( -0.983334330553, -0.181806475010),
        DSPComplex( -0.724716471305, -0.689047194479),
        DSPComplex( -0.231162675510, -0.972915113178),
        DSPComplex(  0.337328591442, -0.941386966872),
        DSPComplex(  0.796465908688, -0.604683434781),
        DSPComplex(  0.997407819049, -0.071955837157),
        DSPComplex(  0.875013708545,  0.484098140730),
        DSPComplex(  0.468960852521,  0.883218952923),
        DSPComplex( -0.089118018438,  0.996021073467),
        DSPComplex( -0.618306935941,  0.785936723259),
        DSPComplex( -0.947055371103,  0.321070279011),
        DSPComplex( -0.968790857919, -0.247879554650),
        DSPComplex( -0.676467265722, -0.736472700381),
        DSPComplex( -0.164848988076, -0.986318818197),
        DSPComplex(  0.400209431938, -0.916423706911),
        DSPComplex(  0.835529421227, -0.549445708204),
        DSPComplex(  0.999990536929, -0.004350408249),
        DSPComplex(  0.840278375725,  0.542155191149),
        DSPComplex(  0.408167842223,  0.912906902469),
        DSPComplex( -0.156261050358,  0.987715791177),
        DSPComplex( -0.670033806829,  0.742330585188),
        DSPComplex( -0.966597453037,  0.256299363601),
        DSPComplex( -0.949813070210, -0.312818048805),
        DSPComplex( -0.625121758220, -0.780527249621),
        DSPComplex( -0.097780759713, -0.995207979786),
        DSPComplex(  0.461258448050, -0.887265824938),
        DSPComplex(  0.870768578204, -0.491693078264),
        DSPComplex(  0.997996133675,  0.063274933192),
        DSPComplex(  0.801696950596,  0.597730708100),
        DSPComplex(  0.345506580588,  0.938416326995),
        DSPComplex( -0.222688849754,  0.974889571282),
        DSPComplex( -0.718693822797,  0.695326677953),
        DSPComplex( -0.981715259472,  0.190355323855),
        DSPComplex( -0.926487831883, -0.376324723307),
        DSPComplex( -0.570914965629, -0.821009197281),
        DSPComplex( -0.030264972734, -0.999541910790),
        DSPComplex(  0.520196208392, -0.854046781374),
        DSPComplex(  0.902022084201, -0.431689888246),
        DSPComplex(  0.991433737996,  0.130610654858),
        DSPComplex(  0.759446026685,  0.650570313304),
        DSPComplex(  0.281263878515,  0.959630465670),
        DSPComplex( -0.288097365664,  0.957601121500),
        DSPComplex( -0.764064258949,  0.645140146167),
        DSPComplex( -0.992339593722,  0.123539996488),
        DSPComplex( -0.898921906390, -0.438108897665),
        DSPComplex( -0.514095001354, -0.857733250832),
        DSPComplex(  0.037389342002, -0.999300774094),
        DSPComplex(  0.576752945141, -0.816918625244),
        DSPComplex(  0.929146886781, -0.369710782619),
        DSPComplex(  0.980333387059,  0.197348550079),
        DSPComplex(  0.713718993420,  0.700432151198),
        DSPComplex(  0.215733785416,  0.976452217894),
        DSPComplex( -0.352187212553,  0.935929573907),
        DSPComplex( -0.805937447338,  0.592000701839),
        DSPComplex( -0.998421826461,  0.056159206242),
        DSPComplex( -0.867241467503, -0.497887775551),
        DSPComplex( -0.454921939715, -0.890531318240),
        DSPComplex(  0.104872519572, -0.994485673420),
        DSPComplex(  0.630669788815, -0.776051298225),
        DSPComplex(  0.952018831263, -0.306039449941),
        DSPComplex(  0.964745888993,  0.263183148531),
        DSPComplex(  0.664725150952,  0.747087995950),
        DSPComplex(  0.149216243304,  0.988804587739),
        DSPComplex( -0.414665040654,  0.909974122742),
        DSPComplex( -0.844121727495,  0.536151572944),
        DSPComplex( -0.999934118311, -0.011478633927),
        DSPComplex( -0.831591521802, -0.555387739211),
        DSPComplex( -0.393666625547, -0.919253277356),
        DSPComplex(  0.171875678373, -0.985118648277),
        DSPComplex(  0.681699953151, -0.731631856793),
        DSPComplex(  0.970533228996, -0.240967324373),
        DSPComplex(  0.944742590342,  0.327813114433),
        DSPComplex(  0.612688752154,  0.790324296086),
        DSPComplex(  0.082015713908,  0.996631036378),
        DSPComplex( -0.475244878672,  0.879853570372),
        DSPComplex( -0.878442323690,  0.477848390130),
        DSPComplex( -0.996869547263, -0.079063934501),
        DSPComplex( -0.792135244952, -0.610345601856),
        DSPComplex( -0.330609434495, -0.943767663052),
        DSPComplex(  0.238092133930, -0.971242573079),
        DSPComplex(  0.729609864697, -0.683863616035),
        DSPComplex(  0.984605336535, -0.174792251734),
        DSPComplex(  0.920415049492,  0.390942625801),
        DSPComplex(  0.557847976181,  0.829943151952),
        DSPComplex(  0.014439785103,  0.999895740868),
        DSPComplex( -0.533649442727,  0.845705783519),
        DSPComplex( -0.908742144910,  0.417358016653)]
    
    let nco_sincos_fsqrt1_5:[DSPComplex] = [
        DSPComplex(  1.000000000000,  0.000000000000),
        DSPComplex(  0.901655595150,  0.432454838954),
        DSPComplex(  0.625965624531,  0.779850650385),
        DSPComplex(  0.227155220309,  0.973858565648),
        DSPComplex( -0.216334073812,  0.976319398818),
        DSPComplex( -0.617272876457,  0.786749131547),
        DSPComplex( -0.896801011772,  0.442434114060),
        DSPComplex( -0.999938423544,  0.011097257308),
        DSPComplex( -0.906399137016, -0.422422305775),
        DSPComplex( -0.634581283115, -0.772856128345),
        DSPComplex( -0.237948391981, -0.971277798961),
        DSPComplex(  0.205486285143, -0.978659995411),
        DSPComplex(  0.608504109432, -0.793550722263),
        DSPComplex(  0.891835984739, -0.452358902117),
        DSPComplex(  0.999753701760, -0.022193147956),
        DSPComplex(  0.911031053190,  0.412337750060),
        DSPComplex(  0.643118791167,  0.765766426822),
        DSPComplex(  0.248712259614,  0.968577416584),
        DSPComplex( -0.194613190240,  0.980880067177),
        DSPComplex( -0.599660403354,  0.800254584898),
        DSPComplex( -0.886761125508,  0.462227980858),
        DSPComplex( -0.999445857398,  0.033286305454),
        DSPComplex( -0.915550773236, -0.402202413750),
        DSPComplex( -0.651577097268, -0.758582418934),
        DSPComplex( -0.259445497609, -0.965757751080),
        DSPComplex(  0.183716128155, -0.982979340706),
        DSPComplex(  0.590742847351, -0.806859893850),
        DSPComplex(  0.881577059062, -0.472040134878),
        DSPComplex(  0.999014928368, -0.044375363646),
        DSPComplex(  0.919957740540,  0.392017545042),
        DSPComplex(  0.659955159752,  0.751304989413),
        DSPComplex(  0.270146784136,  0.962819149696),
        DSPComplex( -0.172796440895,  0.984957557468),
        DSPComplex( -0.581752539647,  0.813365835657),
        DSPComplex( -0.876284423835,  0.481794155781),
        DSPComplex( -0.998460967741,  0.055458956883),
        DSPComplex( -0.924251412370, -0.381784398231),
        DSPComplex( -0.668251946836, -0.743935034495),
        DSPComplex( -0.280814801300, -0.959761974331),
        DSPComplex(  0.161855473250, -0.986814473839),
        DSPComplex(  0.572690587423, -0.819771609094),
        DSPComplex(  0.870883871630, -0.491488842330),
        DSPComplex(  0.997784043738, -0.066535720188),
        DSPComplex(  0.928431259947,  0.371504233561),
        DSPComplex(  0.676466436748,  0.736473461812),
        DSPComplex(  0.291448235303,  0.956586601484),
        DSPComplex( -0.150894572633,  0.988549861135),
        DSPComplex( -0.563558106687,  0.826076425270),
        DSPComplex( -0.865376067540,  0.501123000598),
        DSPComplex( -0.996984239726,  0.077604289425),
        DSPComplex( -0.932496768511, -0.361178317063),
        DSPComplex( -0.684597617848, -0.728921190278),
        DSPComplex( -0.302045776608, -0.953293422212),
        DSPComplex(  0.139915088909, -0.990163505637),
        DSPComplex(  0.554356222129, -0.832279507730),
        DSPComplex(  0.859761689869, -0.510695444109),
        DSPComplex(  0.996061654203, -0.088663301468),
        DSPComplex(  0.936447437384,  0.350807920403),
        DSPComplex(  0.692644488759,  0.721279149977),
        DSPComplex(  0.312606120095,  0.949882842080),
        DSPComplex( -0.128918374235,  0.991655208621),
        DSPComplex( -0.545086066988,  0.838380092545),
        DSPComplex( -0.854041430042,  0.520204993990),
        DSPComplex( -0.995016400786,  0.099711394367),
        DSPComplex( -0.940282780028, -0.340394320727),
        DSPComplex( -0.700606058485, -0.713548282049),
        DSPComplex( -0.323127965229, -0.946355281111),
        DSPComplex(  0.117905782887, -0.993024786378),
        DSPComplex(  0.535748782911, -0.844377428410),
        DSPComplex(  0.848215992526, -0.529650479111),
        DSPComplex(  0.993848608203, -0.110747207518),
        DSPComplex(  0.944002324110,  0.329938800499),
        DSPComplex(  0.708481346534,  0.705729538572),
        DSPComplex(  0.333610016214,  0.942711173733),
        DSPComplex( -0.106878671100,  0.994272070242),
        DSPComplex( -0.526345519812,  0.850270776737),
        DSPComplex( -0.842286094742,  0.539030736233),
        DSPComplex( -0.992558420270,  0.121769381828),
        DSPComplex( -0.947605611558, -0.319442647347),
        DSPComplex( -0.716269383043, -0.697823882448),
        DSPComplex( -0.344050982153, -0.938950968730),
        DSPComplex(  0.095838396892, -0.995396906606),
        DSPComplex(  0.516877435730, -0.856059411743),
        DSPComplex(  0.836252466973, -0.548344610151),
        DSPComplex(  0.991145995878, -0.132776559884),
        DSPComplex(  0.951092198616,  0.308907153903),
        DSPComplex(  0.723969208892,  0.689832287281),
        DSPComplex(  0.354449577213,  0.935075129181),
        DSPComplex( -0.084786319907,  0.996399156943),
        DSPComplex( -0.507345696686,  0.861742620539),
        DSPComplex( -0.830115852277,  0.557590953834),
        DSPComplex( -0.989611508971,  0.143767386120),
        DSPComplex( -0.954461655900, -0.298333617644),
        DSPComplex( -0.731579875826, -0.681755737260),
        DSPComplex( -0.364804520775, -0.931084132408),
        DSPComplex(  0.073723801240, -0.997278697823),
        DSPComplex(  0.497751476543, -0.867319703223),
        DSPComplex(  0.823877006398, -0.566768628568),
        DSPComplex(  0.987955148526, -0.154740506984),
        DSPComplex(  0.957713568453,  0.287723340731),
        DSPComplex(  0.739100446567,  0.673595227035),
        DSPComplex(  0.375114537598,  0.926978469913),
        DSPComplex( -0.062652203273,  0.998035420927),
        DSPComplex( -0.488095956857,  0.872789972960),
        DSPComplex( -0.817536697667,  0.575876504094),
        DSPComplex( -0.986177118527,  0.165694571104),
        DSPComplex( -0.960847535791, -0.277077629851),
        DSPComplex( -0.746529994937, -0.665351761596),
        DSPComplex( -0.385378357974, -0.922758647321),
        DSPComplex(  0.051572889504, -0.998669233064),
        DSPComplex(  0.478380326732, -0.878152756072),
        DSPComplex(  0.811095706911, -0.584913458753),
        DSPComplex(  0.984277637946, -0.176628229455),
        DSPComplex(  0.963863171958,  0.266397796054),
        DSPComplex(  0.753867605965,  0.657026356151),
        DSPComplex(  0.395594717883,  0.918425184315),
        DSPComplex( -0.040487224383,  0.999180056177),
        DSPComplex( -0.468605782677,  0.883407392114),
        DSPComplex( -0.804554827358,  0.593878379616),
        DSPComplex( -0.982256940707,  0.187540135525),
        DSPComplex( -0.966760105569, -0.255685154594),
        DSPComplex( -0.761112376002, -0.648620035997),
        DSPComplex( -0.405762359151, -0.913978614573),
        DSPComplex(  0.029396573143, -0.999567827357),
        DSPComplex(  0.458773528456, -0.888553233964),
        DSPComplex(  0.797914864535, -0.602770162628),
        DSPComplex(  0.980115275667, -0.198428945482),
        DSPComplex(  0.969537979859,  0.244941024761),
        DSPComplex(  0.768263412834,  0.640133836397),
        DSPComplex(  0.415880029602,  0.909419485704),
        DSPComplex( -0.018302301629,  0.999832498849),
        DSPComplex( -0.448884774939,  0.893589647897),
        DSPComplex( -0.791176636173,  0.611587712739),
        DSPComplex( -0.977852906576,  0.209293318336),
        DSPComplex( -0.972196452723, -0.234166729729),
        DSPComplex( -0.775319835790, -0.631568802452),
        DSPComplex( -0.425946483218, -0.904748359177),
        DSPComplex(  0.007205776134, -0.999974038058),
        DSPComplex(  0.438940739955, -0.898516013662),
        DSPComplex(  0.784340972106, -0.620329944043),
        DSPComplex(  0.975470112054, -0.220131916109),
        DSPComplex(  0.974735196764,  0.223363596382),
        DSPComplex(  0.782280775851,  0.622925988970),
        DSPComplex(  0.435960480284,  0.899965810257),
        DSPComplex(  0.003891636774,  0.999992427553),
        DSPComplex( -0.428942648141,  0.903331724565),
        DSPComplex( -0.777408714164,  0.628995779908),
        DSPComplex( -0.972967185547,  0.230943403995),
        DSPComplex( -0.977153899328, -0.212532955158),
        DSPComplex( -0.789145375757, -0.614206460339),
        DSPComplex( -0.445920787547, -0.895072427926),
        DSPComplex( -0.014988570415, -0.999887665069),
        DSPComplex(  0.418891730791, -0.908036187536),
        DSPComplex(  0.770380716075, -0.637584153112),
        DSPComplex(  0.970344435298, -0.241726450529),
        DSPComplex(  0.979452262544,  0.201676139882),
        DSPComplex(  0.795912790112,  0.605411290394),
        DSPComplex(  0.455826178368,  0.890068814820),
        DSPComplex(  0.026083658170,  0.999659763508),
        DSPComplex( -0.408789225705,  0.912628823207),
        DSPComplex( -0.763257843359,  0.646094005971),
        DSPComplex( -0.967602184308,  0.252479727747),
        DSPComplex( -0.981630003362, -0.190794487601),
        DSPComplex( -0.802582185490, -0.596541562286),
        DSPComplex( -0.465675432867, -0.884955587148),
        DSPComplex( -0.037175533647, -0.999308750936),
        DSPComplex(  0.398636377036, -0.917109065981),
        DSPComplex(  0.756040973217, -0.654524290472),
        DSPComplex(  0.964740770291, -0.263201911351),
        DSPComplex(  0.983686853588,  0.179889338425),
        DSPComplex(  0.809152740535,  0.587598368348),
        DSPComplex(  0.475467338081,  0.879733374619),
        DSPComplex(  0.048262830849,  0.998834670583),
        DSPComplex( -0.388434435136,  0.921476364103),
        DSPComplex( -0.748730994427,  0.662873968401),
        DSPComplex( -0.961760545639,  0.273891680873),
        DSPComplex( -0.985622559913, -0.168962035352),
        DSPComplex( -0.815623646064, -0.578582809960),
        DSPComplex( -0.485200688108, -0.874402820364),
        DSPComplex( -0.059344184342, -0.998237580832),
        DSPComplex(  0.378184656405, -0.925730179728),
        DSPComplex(  0.741328807236, -0.671142011471),
        DSPComplex(  0.958661877377, -0.284547719838),
        DSPComplex(  0.987436883951,  0.158013924113),
        DSPComplex(  0.821994105167,  0.569495997414),
        DSPComplex(  0.494874284257,  0.868964580855),
        DSPComplex(  0.070418229426,  0.997517555216),
        DSPComplex( -0.367888303132,  0.929869988987),
        DSPComplex( -0.733835323245,  0.679327401448),
        DSPComplex( -0.955445147112,  0.295168715922),
        DSPComplex( -0.989129602261, -0.147046352999),
        DSPComplex( -0.828263333302, -0.560339049779),
        DSPComplex( -0.504486935198, -0.863419325829),
        DSPComplex( -0.081483602301, -0.996674682410),
        DSPComplex(  0.357546643343, -0.933895282049),
        DSPComplex(  0.726251465296, -0.687429130278),
        DSPComplex(  0.952110750997, -0.305753361120),
        DSPComplex(  0.990700506382,  0.136060672699),
        DSPComplex(  0.834430558397,  0.551113094758),
        DSPComplex(  0.514037457104,  0.857767738198),
        DSPComplex(  0.092538940232,  0.995709066214),
        DSPComplex( -0.347160950645,  0.937805563189),
        DSPComplex( -0.718578167365,  0.695446200210),
        DSPComplex( -0.948659099670,  0.316300351901),
        DSPComplex( -0.992149402850, -0.125058236130),
        DSPComplex( -0.840495020939, -0.541819268554),
        DSPComplex( -0.523524673801, -0.852010513974),
        DSPComplex( -0.103582881724, -0.994620825548),
        DSPComplex(  0.336732504064, -0.941600350842),
        DSPComplex(  0.710816374441, -0.703377623917),
        DSPComplex(  0.945090618214, -0.326808389373),
        DSPComplex(  0.993476113231,  0.114040398276),
        DSPComplex(  0.846455974072,  0.532458715731),
        DSPComplex(  0.532947416909,  0.846148362174),
        DSPComplex(  0.114614066682,  0.993410094432),
        DSPComplex( -0.326262587896,  0.945279177672),
        DSPComplex( -0.702967042411,  0.711222424621),
        DSPComplex( -0.941405746096,  0.337276179440),
        DSPComplex( -0.994680474136, -0.103008516015),
        DSPComplex( -0.852312683688, -0.523032589066),
        DSPComplex( -0.542304525992, -0.840182004740),
        DSPComplex( -0.125631136584, -0.992077021970),
        DSPComplex(  0.315752491540, -0.948841590618),
        DSPComplex(  0.695031137943, -0.718979636214),
        DSPComplex(  0.937604937119, -0.347702432964),
        DSPComplex(  0.995762337245,  0.091963947955),
        DSPComplex(  0.858064428515,  0.513542049416),
        DSPComplex(  0.551594848693,  0.834112176446),
        DSPComplex(  0.136632734646,  0.990621772334),
        DSPComplex( -0.305203509345,  0.952287150960),
        DSPComplex( -0.687009638366,  0.726648303371),
        DSPComplex( -0.933688659365,  0.358085865921),
        DSPComplex( -0.996721569324, -0.080908054267),
        DSPComplex( -0.863710500209, -0.503988265566),
        DSPComplex( -0.560817240883, -0.827939624808),
        DSPComplex( -0.147617505989, -0.989044524744),
        DSPComplex(  0.294616940449, -0.955615434367),
        DSPComplex(  0.678903531553, -0.734227481674),
        DSPComplex(  0.929657395135, -0.368425199561),
        DSPComplex(  0.997558052238,  0.069842196517),
        DSPComplex(  0.869250203441,  0.494372414095),
        DSPComplex(  0.569970566797,  0.821665109996),
        DSPComplex(  0.158584097806,  0.987345473440),
        DSPComplex( -0.283994088620,  0.958826030951),
        DSPComplex( -0.670713815793,  0.741716237725),
        DSPComplex( -0.925511640889,  0.378719160565),
        DSPComplex( -0.998271682975, -0.058767737497),
        DSPComplex( -0.874682855979, -0.484695679221),
        DSPComplex( -0.579053699176, -0.815289404733),
        DSPComplex( -0.169531159530, -0.985524827667),
        DSPComplex(  0.273336262091, -0.961918545318),
        DSPComplex(  0.662441499674, -0.749113649261),
        DSPComplex(  0.921251907190, -0.388966481202),
        DSPComplex(  0.998862373647,  0.047686041058),
        DSPComplex(  0.880007788778,  0.474959252664),
        DSPComplex(  0.588065519407,  0.808813294206)]
    
    let nco_sincos_fsqrt1_7:[DSPComplex] = [
        DSPComplex(  1.000000000000,  0.000000000000),
        DSPComplex(  0.929417729782,  0.369029380357),
        DSPComplex(  0.727634632866,  0.685964897829),
        DSPComplex(  0.423135327397,  0.906066495743),
        DSPComplex(  0.058904317893,  0.998263633182),
        DSPComplex( -0.313641892575,  0.949541343608),
        DSPComplex( -0.641912989417,  0.766777486640),
        DSPComplex( -0.879568734108,  0.475771838153),
        DSPComplex( -0.993060562667,  0.117604076781),
        DSPComplex( -0.966367453272, -0.257165210044),
        DSPComplex( -0.803257526443, -0.595631888176),
        DSPComplex( -0.526756120043, -0.850016464545),
        DSPComplex( -0.175895428035, -0.984408857333),
        DSPComplex(  0.199795461237, -0.979837626175),
        DSPComplex(  0.547282316042, -0.836948066817),
        DSPComplex(  0.817512314214, -0.575911118237),
        DSPComplex(  0.972338562249, -0.233575941320),
        DSPComplex(  0.989905083997,  0.141731876011),
        DSPComplex(  0.867732109487,  0.497032178200),
        DSPComplex(  0.623066130519,  0.782169161371),
        DSPComplex(  0.290445307576,  0.956891594334),
        DSPComplex( -0.083176093733,  0.996534865136),
        DSPComplex( -0.445055979995,  0.895502749673),
        DSPComplex( -0.744109743372,  0.668057400093),
        DSPComplex( -0.938121596793,  0.346306034644),
        DSPComplex( -0.999703946129, -0.024331463036),
        DSPComplex( -0.920163547338, -0.391534220918),
        DSPComplex( -0.710728684262, -0.703466230439),
        DSPComplex( -0.400964133096, -0.916093752828),
        DSPComplex( -0.034597664351, -0.999401321603),
        DSPComplex(  0.336652767782, -0.941628862103),
        DSPComplex(  0.660379766665, -0.750931797023),
        DSPComplex(  0.890884559273, -0.454229789917),
        DSPComplex(  0.995628042491, -0.093406643266),
        DSPComplex(  0.959824150645,  0.280602209256),
        DSPComplex(  0.788527123674,  0.614999979863),
        DSPComplex(  0.505918027668,  0.862581560944),
        DSPComplex(  0.151891245788,  0.988397212386),
        DSPComplex( -0.223577193999,  0.974686225574),
        DSPComplex( -0.567484461944,  0.823384105659),
        DSPComplex( -0.831283046614,  0.555849346867),
        DSPComplex( -0.977733942036,  0.209848370473),
        DSPComplex( -0.986163474863, -0.165775754701),
        DSPComplex( -0.855381693965, -0.517998221646),
        DSPComplex( -0.603850349342, -0.797097707687),
        DSPComplex( -0.267076747662, -0.963675262139),
        DSPComplex(  0.107398620363, -0.994216041082),
        DSPComplex(  0.466713111501, -0.884408769491),
        DSPComplex(  0.760144260739, -0.649754340398),
        DSPComplex(  0.946269994744, -0.323377638447),
        DSPComplex(  0.998815959813,  0.048648519224),
        DSPComplex(  0.910364528935,  0.413807231035),
        DSPComplex(  0.693401907701,  0.720551035248),
        DSPComplex(  0.378555524829,  0.925578583709),
        DSPComplex(  0.010270525265,  0.999947256764),
        DSPComplex( -0.359464308278,  0.933158834858),
        DSPComplex( -0.678455527940,  0.734641474875),
        DSPComplex( -0.901672884794,  0.432418788707),
        DSPComplex( -0.997606003243,  0.069153902954),
        DSPComplex( -0.952712528707, -0.303873061728),
        DSPComplex( -0.773329827890, -0.634003925300),
        DSPComplex( -0.484780377312, -0.874635916123),
        DSPComplex( -0.127797127559, -0.991800329798),
        DSPComplex(  0.247226544974, -0.968957705713),
        DSPComplex(  0.587350595903, -0.809332612399),
        DSPComplex(  0.844561569887, -0.535458452795),
        DSPComplex(  0.982550397988, -0.185996546781),
        DSPComplex(  0.981837950701,  0.189721476283),
        DSPComplex(  0.842524800322,  0.538657554336),
        DSPComplex(  0.584277023699,  0.811554286279),
        DSPComplex(  0.243550049538,  0.969888330361),
        DSPComplex( -0.131557555439,  0.991308534013),
        DSPComplex( -0.488093898561,  0.872791124031),
        DSPComplex( -0.775728690804,  0.631066556129),
        DSPComplex( -0.953858098906,  0.300257767846),
        DSPComplex( -0.997336566835, -0.072936770247),
        DSPComplex( -0.900026476647, -0.435835222687),
        DSPComplex( -0.675664562503, -0.737209196211),
        DSPComplex( -0.355922770904, -0.934515372346),
        DSPComplex(  0.014062695080, -0.999901115414),
        DSPComplex(  0.382063007175, -0.924136277044),
        DSPComplex(  0.696129570446, -0.717916165824),
        DSPComplex(  0.911927322820, -0.410351748984),
        DSPComplex(  0.998993273758, -0.044860216082),
        DSPComplex(  0.945036798307,  0.326963988607),
        DSPComplex(  0.757674637528,  0.652632472106),
        DSPComplex(  0.463355684742,  0.886172392606),
        DSPComplex(  0.103627339662,  0.994616194557),
        DSPComplex( -0.270729511199,  0.962655458493),
        DSPComplex( -0.606868955028,  0.794801907033),
        DSPComplex( -0.857340021717,  0.514750509629),
        DSPComplex( -0.986785078242,  0.162034593094),
        DSPComplex( -0.976931072688, -0.213554862310),
        DSPComplex( -0.829169041221, -0.558997943718),
        DSPComplex( -0.564357743106, -0.825530337296),
        DSPComplex( -0.219879143544, -0.975527120194),
        DSPComplex(  0.155638594267, -0.987814065487),
        DSPComplex(  0.509185681445, -0.860656692190),
        DSPComplex(  0.790853805905, -0.612005112466),
        DSPComplex(  0.960881416303, -0.276960112297),
        DSPComplex(  0.995266643155,  0.097181834844),
        DSPComplex(  0.889155511714,  0.457605152930),
        DSPComplex(  0.657527151087,  0.753430849902),
        DSPComplex(  0.333079272352,  0.942898827197),
        DSPComplex( -0.038387588793,  0.999262924873),
        DSPComplex( -0.404435483608,  0.914566530985),
        DSPComplex( -0.713391429243,  0.700765773053),
        DSPComplex( -0.921641801618,  0.388041736814),
        DSPComplex( -0.999789032622,  0.020539967128),
        DSPComplex( -0.936801504302, -0.349861317578),
        DSPComplex( -0.741570822148, -0.670874590172),
        DSPComplex( -0.441656635685, -0.897184159555),
        DSPComplex( -0.079396193214, -0.996843139367),
        DSPComplex(  0.294072176383, -0.955783215524),
        DSPComplex(  0.626027982347, -0.779800593305),
        DSPComplex(  0.869610835882, -0.493737778701),
        DSPComplex(  0.990435475412, -0.137976697470),
        DSPComplex(  0.971445746224,  0.237261800850),
        DSPComplex(  0.815322324712,  0.579007346089),
        DSPComplex(  0.544104301925,  0.839017585410),
        DSPComplex(  0.196078045407,  0.980588292868),
        DSPComplex( -0.179627478280,  0.983734704606),
        DSPComplex( -0.529975971546,  0.848012658858),
        DSPComplex( -0.805510650347,  0.592581295839),
        DSPComplex( -0.967335788375,  0.253498466521),
        DSPComplex( -0.992607414390, -0.121369357324),
        DSPComplex( -0.877758070920, -0.479104131619),
        DSPComplex( -0.639000412754, -0.769206391354),
        DSPComplex( -0.310038554984, -0.950723984353),
        DSPComplex(  0.062689752919, -0.998033063019),
        DSPComplex(  0.426568490660, -0.904455263004),
        DSPComplex(  0.730230883453, -0.683200451443),
        DSPComplex(  0.930810569171, -0.365501962128),
        DSPComplex(  0.999992808660,  0.003792443700),
        DSPComplex(  0.928011522874,  0.372551490955),
        DSPComplex(  0.725027916943,  0.688719478201),
        DSPComplex(  0.419696078314,  0.907664696817),
        DSPComplex(  0.055118035666,  0.998479845638),
        DSPComplex( -0.317240719156,  0.948345045914),
        DSPComplex( -0.644816333651,  0.764337553609),
        DSPComplex( -0.881366746740,  0.472432701811),
        DSPComplex( -0.993499428070,  0.113837104776),
        DSPComplex( -0.965385219214, -0.260828254841),
        DSPComplex( -0.800992849544, -0.598673913729),
        DSPComplex( -0.523528692375, -0.852008044716),
        DSPComplex( -0.172160847942, -0.985068851622),
        DSPComplex(  0.203510003471, -0.979072866791),
        DSPComplex(  0.550452458771, -0.834866510667),
        DSPComplex(  0.819690545696, -0.572806607239),
        DSPComplex(  0.973217393439, -0.229886722341),
        DSPComplex(  0.989360455092,  0.145485016068),
        DSPComplex(  0.865840902777,  0.500319429044),
        DSPComplex(  0.620095317331,  0.784526479747),
        DSPComplex(  0.286814261387,  0.957986210477),
        DSPComplex( -0.086954797956,  0.996212258062),
        DSPComplex( -0.448448923206,  0.893808460060),
        DSPComplex( -0.746637962304,  0.665230601556),
        DSPComplex( -0.939428196580,  0.342745770900),
        DSPComplex( -0.999604481214, -0.028122608992),
        DSPComplex( -0.918672058640, -0.395021073709),
        DSPComplex( -0.708055717096, -0.706156570094),
        DSPComplex( -0.397487015646, -0.917607798786),
        DSPComplex( -0.030807242302, -0.999525344262),
        DSPComplex(  0.340221421243, -0.940345353861),
        DSPComplex(  0.663222884212, -0.748421943731),
        DSPComplex(  0.892600793524, -0.450847893862),
        DSPComplex(  0.995975122026, -0.089630108250),
        DSPComplex(  0.958753080142,  0.284240270403),
        DSPComplex(  0.786189100308,  0.617986001910),
        DSPComplex(  0.502643097433,  0.864494023463),
        DSPComplex(  0.148141712706,  0.988966143483),
        DSPComplex( -0.227272028815,  0.973831312353),
        DSPComplex( -0.570603018834,  0.821226031551),
        DSPComplex( -0.833385095928,  0.552692755412),
        DSPComplex( -0.978522748949,  0.206138860453),
        DSPComplex( -0.985527687809, -0.169514532008),
        DSPComplex( -0.853411063532, -0.521238483461),
        DSPComplex( -0.600823058669, -0.799382043938),
        DSPComplex( -0.263420142846, -0.964681205551),
        DSPComplex(  0.111168356384, -0.993801588114),
        DSPComplex(  0.470063825674, -0.882632426207),
        DSPComplex(  0.762602951037, -0.646866863481),
        DSPComplex(  0.947489581282, -0.319786637248),
        DSPComplex(  0.998624280217,  0.052436122669),
        DSPComplex(  0.908788641568,  0.417256761428),
        DSPComplex(  0.690664271978,  0.723175541216),
        DSPComplex(  0.375042597839,  0.927007578074),
        DSPComplex(  0.006478207732,  0.999979016192),
        DSPComplex( -0.363000675592,  0.931788876044),
        DSPComplex( -0.681236735369,  0.732063187426),
        DSPComplex( -0.903306324468,  0.428996135385),
        DSPComplex( -0.997861091402,  0.065370041044),
        DSPComplex( -0.951553255949, -0.307483985100),
        DSPComplex( -0.770919842419, -0.636932175796),
        DSPComplex( -0.481459883622, -0.876468128606),
        DSPComplex( -0.124034861615, -0.992277860835),
        DSPComplex(  0.250899484630, -0.968013144855),
        DSPComplex(  0.590415720432, -0.807099298145),
        DSPComplex(  0.846586192393, -0.532251649927),
        DSPComplex(  0.983248713565, -0.182268942150),
        DSPComplex(  0.981111381953,  0.193443677081),
        DSPComplex(  0.840475912991,  0.541848908537),
        DSPComplex(  0.581195048024,  0.813764287833),
        DSPComplex(  0.239870051199,  0.970805005414),
        DSPComplex( -0.135316091168,  0.990802480554),
        DSPComplex( -0.491400399711,  0.870933778863),
        DSPComplex( -0.778116396659,  0.628120110528),
        DSPComplex( -0.954989950067,  0.296638155453),
        DSPComplex( -0.997052786053, -0.076718588513),
        DSPComplex( -0.898367123706, -0.439245388188),
        DSPComplex( -0.672863879197, -0.739766314502),
        DSPComplex( -0.352376114406, -0.935858468998),
        DSPComplex(  0.017854662635, -0.999840592806),
        DSPComplex(  0.385564994432, -0.922680678821),
        DSPComplex(  0.698847220981, -0.715270970841),
        DSPComplex(  0.913477000745, -0.406890364975),
        DSPComplex(  0.999156219501, -0.041071267730),
        DSPComplex(  0.943790009707,  0.330545636150),
        DSPComplex(  0.755194116925,  0.655501217209),
        DSPComplex(  0.459991593687,  0.887923270186),
        DSPComplex(  0.099854568522,  0.995002042784),
        DSPComplex( -0.274378380919,  0.961621809281),
        DSPComplex( -0.609878832312,  0.792494674997),
        DSPComplex( -0.859286018620,  0.511495394119),
        DSPComplex( -0.987392489006,  0.158291100995),
        DSPComplex( -0.976114152452, -0.217258282656),
        DSPComplex( -0.827043110154, -0.562138500679),
        DSPComplex( -0.561222907291, -0.827664695593),
        DSPComplex( -0.216177930638, -0.976353984119),
        DSPComplex(  0.159383704246, -0.987216711174),
        DSPComplex(  0.512446011768, -0.858719444885),
        DSPComplex(  0.793169113539, -0.609001442796),
        DSPComplex(  0.961924861910, -0.273314031909),
        DSPComplex(  0.994890929216,  0.100955628686),
        DSPComplex(  0.887413675715,  0.460973934354),
        DSPComplex(  0.654665078505,  0.755919066426),
        DSPComplex(  0.329500986349,  0.944155230878),
        DSPComplex( -0.042176961119,  0.999110156064),
        DSPComplex( -0.407901017253,  0.913026155224),
        DSPComplex( -0.716043913743,  0.698055236776),
        DSPComplex( -0.923106800218,  0.384543671630),
        DSPComplex( -0.999859739467,  0.016748175800),
        DSPComplex( -0.935467938094, -0.353411568569),
        DSPComplex( -0.739021235147, -0.673682131277),
        DSPComplex( -0.438250939168, -0.898852665523),
        DSPComplex( -0.075615150766, -0.997137076321),
        DSPComplex(  0.297694815644, -0.954661089989),
        DSPComplex(  0.628980830213, -0.777420809616),
        DSPComplex(  0.871477054943, -0.490436277929),
        DSPComplex(  0.990951621711, -0.134219534454),
        DSPComplex(  0.970538958206,  0.240944247919),
        DSPComplex(  0.813120608690,  0.582095246264),
        DSPComplex(  0.540918462130,  0.841075036680),
        DSPComplex(  0.192357809450,  0.981324856071),
        DSPComplex( -0.183356945000,  0.983046403137),
        DSPComplex( -0.533188200573,  0.845996656476)]
    
    let tol:Float = 0.04;
    func testFrequency2() {
        frequencyTest(0.707106781186547, nco_sincos_fsqrt1_2, tol) // 1/sqrt(2)
    }
    func testFrequency3() {
        frequencyTest(0.577350269189626, nco_sincos_fsqrt1_3, tol) // 1/sqrt(3)
    }
    func testFrequency5() {
        frequencyTest(0.447213595499958, nco_sincos_fsqrt1_5, tol) // 1/sqrt(5)
    }
    func testFrequency7() {
        frequencyTest(0.377964473009227, nco_sincos_fsqrt1_7, tol) // 1/sqrt(7)
    }
    
    func phaseTest(_ theta:Float, _ cos:Float, _ sin:Float, _ tol:Float) {
        let osc = Oscillator<ComplexSamples>(signalHz:0.5, sampleHz:1, level:1.0)
        osc.setPhase(theta)
        osc.generate(1)
        AssertEqual(osc.produceBuffer[0], DSPComplex(cos,sin), accuracy: tol)
    }
    
    func testPhase() {
        let tol:Float = 0.02
        // data from liquid-dsp-1.3.2/src/nco/tests/nco_crcf_phase_autotest.c
        phaseTest(-6.283185307,  1.000000000,  0.000000000, tol);
        phaseTest(-6.195739393,  0.996179042,  0.087334510, tol);
        phaseTest(-5.951041106,  0.945345356,  0.326070787, tol);
        phaseTest(-5.131745978,  0.407173250,  0.913350943, tol);
        phaseTest(-4.748043551,  0.035647016,  0.999364443, tol);
        phaseTest(-3.041191113, -0.994963998, -0.100232943, tol);
        phaseTest(-1.947799864, -0.368136099, -0.929771914, tol);
        phaseTest(-1.143752030,  0.414182352, -0.910193924, tol);
        phaseTest(-1.029377689,  0.515352252, -0.856978446, tol);
        phaseTest(-0.174356887,  0.984838307, -0.173474811, tol);
        phaseTest(-0.114520496,  0.993449692, -0.114270338, tol);
        phaseTest( 0.000000000,  1.000000000,  0.000000000, tol);
        phaseTest( 1.436080000,  0.134309213,  0.990939471, tol);
        phaseTest( 2.016119855, -0.430749878,  0.902471353, tol);
        phaseTest( 2.996498473, -0.989492293,  0.144585621, tol);
        phaseTest( 3.403689755, -0.965848729, -0.259106603, tol);
        phaseTest( 3.591162483, -0.900634128, -0.434578148, tol);
        phaseTest( 5.111428476,  0.388533479, -0.921434607, tol);
        phaseTest( 5.727585681,  0.849584319, -0.527452828, tol);
        phaseTest( 6.283185307,  1.000000000, -0.000000000, tol);
        
    }
    
    internal class TestSource<Samples:DSPSamples>:BufferedSource<Samples> {
        let sampleHz:Float
        
        public init(sampleHz:Float, data:[Samples.Element]) {
            self.sampleHz = sampleHz
            super.init(name: "TestSource")
            data.forEach{outputBuffer.append($0)}
        }
        
        override public func sampleFrequency() -> Double {
            return Double(sampleHz)
        }
        
    }
    
    func testMixerDown() {
        // based on liquid-dsp-1.3.2/src/nco/tests/nco_crcf_phase_autotest.c autotest_nco_block_mixing
        let f:Float = 0.1
        let phi:Float = .pi
        let tol:Float = 0.05
        let N = 1024
        let s = TestSource<ComplexSamples>(sampleHz:1,
                                           data: (0..<N).map{DSPComplex.exp(DSPComplex(0, f*Float($0)+phi))})
        let m = Mixer(source:s, signalHz:0)
        m.osc.setFrequency(-f)
        m.osc.setPhase(phi)
        var y = ComplexSamples(repeating:.nan, count:N)
        m.process(s.outputBuffer, &y)
        (0..<N).forEach{AssertEqual(y[$0], DSPComplex(1.0,0.0), accuracy:tol)}
    }
    
    func testMixerUp() {
        // based on liquid-dsp-1.3.2/src/nco/tests/nco_crcf_mix_autotest.c autotest_nco_crcf_mix_block_up
        let freq:Float = 0
        let phase:Float = 0.7123
        let tol:Float = 1e-2
        let N = 4096
        let s = TestSource<ComplexSamples>(sampleHz:1,
                                           data: (0..<N).map{_ in DSPComplex.exp(DSPComplex(0,2*Float.pi*Float.random(in:0...1)))})
        let m = Mixer(source:s, signalHz:0)
        m.osc.setPhase(phase)
        m.osc.setFrequency(freq)
        var y = ComplexSamples()
        m.process(s.outputBuffer, &y)
        var phi = phase
        for i in 0..<N {
            let v = s.outputBuffer[i] * DSPComplex.exp(DSPComplex(0,phi))
            AssertEqual(y[i], v, accuracy:tol)
            phi += freq
        }
    }
    
    func runPLLTest(_ phaseOffset:Float, _ freqOffset:Float, _ pllBandwidth:Float, _ N:Int, _ tol:Float) {
        let tx = Oscillator<ComplexSamples>(signalHz:1, sampleHz:5, level:1.0)
        tx.setPhase(phaseOffset)
        tx.setFrequency(freqOffset)
        let rx = Mixer(source: tx, signalHz: 0,
                       controlLoopBandwidth: pllBandwidth) { ref, osc in
            (ref * osc.conjugate()).argument()
        }
        
        tx.generate(N)
        
        //print(zip(Array(tx.produceBuffer.suffix(10)),
        //          Array(rx.produceBuffer.suffix(10))).map{($0.0-$0.1).magnitude})
        //print("samples", tx.produceBuffer.count, "txphase", tx.getPhase(), "rxphase", rx.osc.getPhase())
        var phaseError = tx.getPhase() - rx.osc.getPhase()
        while phaseError >=  2*Float.pi { phaseError -= 2*Float.pi }
        while phaseError <= -2*Float.pi { phaseError += 2*Float.pi }
        XCTAssertEqual(phaseError, 0, accuracy:tol)
        
        var frequencyError = tx.getFrequency() - rx.osc.getFrequency()
        while frequencyError >=  2*Float.pi { frequencyError -= 2*Float.pi }
        while frequencyError <= -2*Float.pi { frequencyError += 2*Float.pi }
        XCTAssertEqual(frequencyError, 0, accuracy:tol)
        //print("runPLLTest", phaseOffset, freqOffset, "phaseError", phaseError, "frequencyError", frequencyError)
    }
    
    func testPLLphase() {
        let bw:Float = 0.1
        let N:Int = 256
        let tol:Float = 1e-2
        
        // test various phase offsets
        runPLLTest(-Float.pi/1.1,  0.0, bw, N, tol)
        runPLLTest(-Float.pi/2.0,  0.0, bw, N, tol)
        runPLLTest(-Float.pi/4.0,  0.0, bw, N, tol)
        runPLLTest(-Float.pi/8.0,  0.0, bw, N, tol)
        runPLLTest( Float.pi/8.0,  0.0, bw, N, tol)
        runPLLTest( Float.pi/4.0,  0.0, bw, N, tol)
        runPLLTest( Float.pi/2.0,  0.0, bw, N, tol)
        runPLLTest( Float.pi/1.1,  0.0, bw, N, tol)
        
    }
    
    func testPLLfreq() {
        let bw:Float = 0.1
        let N:Int = 256
        let tol:Float = 1e-2
        
        // test various frequency offsets
        runPLLTest( 0.0,      -1.6, bw, N, tol)
        runPLLTest( 0.0,      -0.8, bw, N, tol)
        runPLLTest( 0.0,      -0.4, bw, N, tol)
        runPLLTest( 0.0,      -0.2, bw, N, tol)
        runPLLTest( 0.0,       0.2, bw, N, tol)
        runPLLTest( 0.0,       0.4, bw, N, tol)
        runPLLTest( 0.0,       0.8, bw, N, tol)
        runPLLTest( 0.0,       1.6, bw, N, tol)
        
    }
    
    // from gnuradio-3.10.5.1/gr-digital/python/digital/qa_costas_loop_cc.py
    
    func runCostasTest(X:[DSPComplex], natFreq:Float, est:@escaping CostasLoop.ErrorEstimator)->[DSPComplex] {
        let source = TestSource<ComplexSamples>(sampleHz: 1, data: X)
        let test = CostasLoop(source: source, signalHz: 0, controlLoopBandwidth: natFreq, errorEstimator: est)
        let N = source.outputBuffer.count
        var y = ComplexSamples(repeating:.nan, count:N)
        test.process(source.outputBuffer, &y)
        print("runCostasTest", y)
        return y.zip()
    }
    
    func testCostas1() {
        // test basic functionality by setting all gains to 0
        let x = [DSPComplex](repeating: DSPComplex(1,0), count: 100)
        let y = runCostasTest(X: x, natFreq: 0, est:CostasLoop.errorEstimator2)
        AssertEqual(y, x, accuracy:0)
    }
    
    func testCostas2() {
        // Make sure it doesn't diverge given perfect data
        let x = (0..<100).map { i in DSPComplex(DSPComplex.Element(2 * Int.random(in: 0..<2) - 1), 0) }
        let y = runCostasTest(X: x, natFreq: 0.25, est:CostasLoop.errorEstimator2)
        AssertEqual(y, x, accuracy:1e-5)
    }
    
    func testCostas3() {
        // BPSK Convergence test with static rotation
        let rot = DSPComplex.exp(DSPComplex(0,0.2)) // small rotation
        let d = (0..<100).map { i in DSPComplex(DSPComplex.Element(2 * Int.random(in: 0..<2) - 1), 0) }
        let x = d.map { $0*rot }
        let y = runCostasTest(X: x, natFreq: 0.25, est:CostasLoop.errorEstimator2)
        let N = 40 // settling time
        zip(y.dropFirst(N), d.dropFirst(N)).forEach { pair in
            print(pair.0, pair.1, (pair.0-pair.1).modulus())
        }
        //AssertEqual([DSPComplex](y.dropFirst(N)), [DSPComplex](d.dropFirst(N)), accuracy:1e-2)
    }
    
}
