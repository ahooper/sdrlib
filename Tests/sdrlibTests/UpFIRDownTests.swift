//
//  UpFIRDownTests.swift
//  SimpleSDR3Tests
//
//  Created by Andy Hooper on 2020-01-24.
//  Copyright Â© 2020 Andy Hooper. All rights reserved.
//

import XCTest
import struct Accelerate.vecLib.vDSP.DSPComplex
@testable import sdrlib

class UpFIRDownTests: XCTestCase {

    func runTest(_ P: Int, _ h: [Float], _ Q: Int, _ x: [Float], _ y: [Float], accuracy:Float=2.0e-7) {
        
        // Test on the whole block
        let f = UpFIRDown(source:NilSource<RealSamples>.Real(), P, h, Q)
        var o=RealSamples()
        f.process(RealSamples(x), &o)
        AssertEqual(o, y, accuracy:accuracy)
        
        // Test on two halves in sequence, to exercise stream overalap
        let f2 = UpFIRDown(source:NilSource<RealSamples>.Real(), P, h, Q)
        let half = x.count / 2
        var oo=RealSamples(), o2=RealSamples()
        f2.process(RealSamples(Array(x[0..<half])), &oo)
        f2.process(RealSamples(Array(x[half...])), &o2)
        oo.append(o2)
        AssertEqual(oo, y, accuracy:accuracy)
        
        // Test on one sample at a time, to exercise stream overalap
        let f3 = UpFIRDown(source:NilSource<RealSamples>.Real(), P, h, Q)
        oo=RealSamples()
        var o3 = RealSamples()
        for i in 0..<x.count {
            let xx = RealSamples(Array(x[i..<(i+1)]))
            f3.process(xx, &o3)
            oo.append(o3)
        }
        AssertEqual(oo, y, accuracy:accuracy)
    }
    
    func runTest(_ P: Int, _ h: [Float], _ Q: Int, _ x: [DSPComplex], _ y: [DSPComplex], accuracy:Float=2.0e-7) {
        
        // Test on the whole block
        let f = UpFIRDown(source:NilSource<ComplexSamples>.Complex(), P, h, Q)
        var o=ComplexSamples()
        f.process(ComplexSamples(x), &o)
        AssertEqual(o, y, accuracy:accuracy)
        
        // Test on two halves in sequence, to exercise stream overalap
        let f2 = UpFIRDown(source:NilSource<ComplexSamples>.Complex(), P, h, Q)
        let half = x.count / 2
        var oo=ComplexSamples(), o2=ComplexSamples()
        f2.process(ComplexSamples(Array(x[0..<half])), &oo)
        f2.process(ComplexSamples(Array(x[half...])), &o2)
        oo.append(o2)
        AssertEqual(oo, y, accuracy:accuracy)
        
        // Test on one sample at a time, to exercise stream overalap
        let f3 = UpFIRDown(source:NilSource<ComplexSamples>.Complex(), P, h, Q)
        oo=ComplexSamples()
        var o3 = ComplexSamples()
        for i in 0..<x.count {
            let xx = ComplexSamples([DSPComplex](x[i..<(i+1)]))
            f3.process(xx, &o3)
            oo.append(o3)
        }
        AssertEqual(oo, y, accuracy:accuracy)
    }

    func runIdentityTest(_ up:Int, _ down:Int, _ P:Int, _ N:Int) {
        let b = UpFIRDown(source:NilSource<RealSamples>.Real(),
                          up, [Float](repeatElement(1, count:P)), down)
        let x = [Float](repeatElement(1, count:N))
        let y = [Float](stride(from:0,to:N,by:down).map({i in (i < P) ? Float(i+1) : Float(P)}))
        var o=RealSamples()
        b.process(RealSamples(x), &o)
        AssertEqual(o, y, accuracy:1e-8)
        
        let yM = [Float](repeatElement(Float(P), count:N*up))
        var rM = RealSamples(), o3=RealSamples()
        for _ in 0..<down {
            b.process(RealSamples(x), &o3)
            rM.append(o3)
        }
        AssertEqual(rM, yM, accuracy:2e-7)
    }

    func testIdentity1() {
        runIdentityTest(1,1,5,11)
    }
    
    func testIdentity2() {
        runIdentityTest(1,2,5,11)
    }
    
    func testIdentity3() {
        runIdentityTest(1,3,5,11)
    }
    
    func testIdentity4() {
        runIdentityTest(1,4,5,11)
    }
    
    func testIdentity5() {
        runIdentityTest(1,5,5,11)
    }
    
    func testIdentityLong() {
        runIdentityTest(1,5,64,1024)
        runIdentityTest(1,5,64,1008)
        runIdentityTest(1,25,64,1008)
        runIdentityTest(1,23,59,1001)
    }

    func testISCL() {
        // https://bbaker.pages.isti.com/iscl/signal_2resample_2unit__tests_8c_source.html
        runTest(2,
                [0.000000,0.001239,0.004376,-0.000000,-0.010696,
                -0.009296,0.012749,0.028076,-0.000000,-0.054148,
                -0.049578,0.081803,0.288787,0.413374,0.288787,
                0.081803,-0.049578,-0.054148,-0.000000,0.028076,
                0.012749,-0.009296,-0.010696,-0.000000,0.004376,
                0.001239,0.000000].map({ x in x / 2.0 }),
                3,
                [0.000000,12.563283,50.251949,113.055357,
                200.932126,313.774712,451.359939,613.285770,
                798.894869,1007.185931,1236.714362,1485.484691,
                1750.838108,2029.339747,2316.671765,
                2607.539822,2895.602269,3173.432972,
                3432.530169,3663.384894,3855.622947,3998.234050,
                4079.900147,4089.431693,4016.315723,3851.372359,
                3587.507036,3220.534100,2750.033920,2180.190809,
                1520.543909,786.569226],
                [0, 0.000015565907637e3, 0.000085525653856e3,
                0.000134539519718e3, 0.000042388421835e3,
                0.006666754975907e3, 0.039266998803555e3,
                0.102491916680429e3, 0.187213128459465e3,
                0.312296861414690e3, 0.442952596219748e3,
                0.629369893740571e3, 0.794443184727762e3,
                1.032436390749837e3, 1.209447477763813e3,
                1.472858383921043e3, 1.623256137011140e3,
                1.863084791540758e3, 1.930801205372016e3,
                2.074591231053166e3, 1.9937951162793113e3,
                1.958088767454887e3/*, 1.675755349780860e3,
                1.399931452068732e3, 0.915504612288626e3,
                0.383523066387840e3, -0.026522582049407e3,
                0.011356033437992e3, -0.001759244295512e3,
                0.000974559271014e3*/],
                accuracy: 1e-1)
    }
    
    func testInterpolateReal() {
        //  Test data from liquid-dsp-1.3.1/src/filter/tests/firinterp_autotest.c
        runTest(4,
                [ -0.2762293319046737,
                   1.4757679031218007,
                   0.1432569489572376,
                  -0.2142368750177835,
                   1.3471241294836864,
                   0.1166010284926269,
                   0.0536534505390281,
                   0.1412672462812405,
                   -0.0991854372394269].map({ x in x / 4.0 }),
                1,
                [ 1.0, -1.0, 1.0, 1.0],
                [ -0.2762293319046737,
                   1.4757679031218007,
                   0.1432569489572376,
                  -0.2142368750177835,
                   1.6233534613883602,
                  -1.3591668746291738,
                  -0.0896034984182095,
                   0.3555041212990241,
                  -1.7225388986277870,
                   1.3591668746291738,
                   0.0896034984182095,
                  -0.3555041212990241,
                   1.1700802348184398,
                   1.5923689316144276,
                   0.1969103994962658,
                  -0.0729696287365430])
    }
    
    func testDecimateReal_M2h4x20() {
        runTest(1,
                [0.070782309250,
                -0.114245586699,
                 0.008215220382,
                -0.116718567037],
                2,
                [0.098311328839,
                -0.051405684088,
                -0.097846553674,
                 0.070744555579,
                -0.092569362020,
                 0.125743342560,
                -0.015936561579,
                 0.092440100110,
                -0.007046555447,
                -0.011409188742,
                 0.065796277764,
                 0.121624056526,
                 0.001291608019,
                -0.103251042400,
                -0.067174551288,
                -0.069262060525,
                 0.038107684731,
                -0.091432498375,
                 0.094339814736,
                 0.004969612518],
                [0.006958702881,
                -0.000245283250,
                -0.009438359685,
                -0.024511329437,
                -0.025867150062,
                -0.004886703086,
                -0.011931393613,
                -0.007143968697,
                 0.022109694637,
                 0.025520580844])
    }

    func testDecimateReal_M3h7x30() {
        runTest(1,
                [-0.074705344704,
                 0.020538592337,
                -0.020061495576,
                 0.096703320953,
                 0.100160540368,
                 0.097166994081,
                 0.083888510566],
                3,
                [-0.077089593357,
                 0.032375219181,
                 0.141488397385,
                 0.034405467968,
                -0.138389144841,
                 0.154646756715,
                 0.086331166522,
                 0.041332691838,
                 0.091791117954,
                -0.065105465675,
                 0.075745848821,
                 0.012475523017,
                -0.107768670583,
                 0.233864631918,
                -0.110944430251,
                -0.060308141718,
                -0.251948448147,
                 0.153274083486,
                -0.114102376762,
                -0.183548035449,
                -0.152968693185,
                 0.049660839590,
                -0.056844064619,
                -0.153304122180,
                 0.018994945270,
                 0.000201893929,
                -0.055497296237,
                 0.101173781919,
                -0.050453255942,
                -0.019320758294],
                [0.005759004645,
                -0.007768614835,
                 0.013680669269,
                 0.019197170461,
                 0.020943849985,
                -0.009738613503,
                 0.013465672357,
                -0.028391740957,
                -0.041353046024,
                -0.023577651344])
    }

    func testDecimateReal_M4h13x40() {
        runTest(1,
                [-0.050178519704,
                 0.099634819705,
                 0.087767256514,
                 0.031474342328,
                -0.161835107291,
                 0.031896126939,
                -0.240761793751,
                -0.044460468897,
                 0.019656280155,
                 0.150308997913,
                -0.145260671043,
                 0.044691633752,
                -0.228340355042],
                4,
                [-0.006034368030,
                -0.171592529075,
                -0.063780807965,
                 0.013676314399,
                 0.116628260211,
                 0.119863895134,
                 0.111602959230,
                 0.130154286756,
                 0.038035316610,
                 0.059453633879,
                -0.109240225614,
                 0.077742393809,
                -0.021666946122,
                 0.067622802572,
                -0.058137116614,
                -0.069171140610,
                 0.067330056503,
                 0.087258333681,
                 0.042012179512,
                -0.025556605587,
                -0.111286144010,
                -0.040760608600,
                 0.127330790275,
                 0.033399307914,
                -0.005634951089,
                 0.043243872564,
                 0.038979737383,
                -0.045742865035,
                -0.193432344744,
                -0.020574800494,
                -0.065306698326,
                -0.101479446471,
                -0.016230721248,
                 0.000392179194,
                -0.065936759641,
                 0.032965659365,
                 0.057788436776,
                -0.268236198963,
                -0.077821704788,
                -0.125842807499],
                [0.000302795655,
                -0.014511652270,
                 0.029055193091,
                -0.025764218622,
                -0.000775391175,
                 0.028459415706,
                 0.024044484393,
                -0.040542156850,
                 0.012864586577,
                -0.002482554609])
    }

    func testDecimateReal_M5h23x50() {
        runTest(1,
                [-0.067636988306,
                -0.129830871935,
                -0.096852198413,
                -0.101084148415,
                -0.099274002866,
                 0.068432593779,
                -0.123467175510,
                 0.053608743344,
                 0.062001100783,
                -0.186969419240,
                 0.089108369240,
                -0.007475824870,
                 0.163590779858,
                 0.097601917788,
                 0.092009543577,
                -0.041838135753,
                -0.056136168702,
                 0.003032887982,
                 0.009882398914,
                 0.074984250657,
                -0.019855593061,
                -0.060394654408,
                 0.023157699589],
                5,
                [-0.053013073944,
                -0.096057779578,
                 0.089544324704,
                -0.000543553496,
                 0.162822533187,
                -0.074585191755,
                 0.104404924404,
                -0.029558379775,
                -0.007349400311,
                -0.194774278732,
                -0.170758029656,
                 0.045377876421,
                 0.080652365875,
                 0.072939196850,
                -0.089654082233,
                -0.103982998990,
                 0.163030711963,
                -0.024228077817,
                 0.131281994357,
                 0.016327074888,
                -0.055411828614,
                 0.043034256150,
                 0.018076404143,
                 0.097676360852,
                 0.137184094723,
                 0.082482387627,
                 0.056634950389,
                 0.027836125209,
                -0.014908882821,
                 0.162327107907,
                -0.153015761693,
                -0.020845168829,
                -0.001125342955,
                -0.044310410921,
                -0.053090705118,
                -0.024619825348,
                 0.039550843685,
                -0.206275854122,
                 0.034696692856,
                -0.153816675012,
                -0.028473257841,
                 0.054242064784,
                 0.197473069156,
                 0.002233912029,
                 0.021458220407,
                 0.122982229244,
                 0.127458372904,
                -0.040153514587,
                -0.055390576800,
                 0.126488480454],
                [0.003585644662,
                -0.019185323038,
                 0.023723637517,
                -0.016266117610,
                -0.039970055370,
                -0.037092249176,
                 0.027140256398,
                 0.025837751181,
                 0.028127341349,
                -0.054916331965])
    }
        
    func testInterpolateComplex() {
        runTest(4,[
                -0.7393353832652201,
                 0.1909821993029451,
                -1.7013834621383086,
                -0.6157406339062349,
                 0.5806218191269317,
                 0.0576963976148674,
                -1.0958217797368455,
                -0.6379821629743743,
                0.7019489165905530].map({ x in x / 4.0 }),
           1, [
               DSPComplex( 1.0000e+00,  2.0000e-01),
               DSPComplex(-2.0000e-01,  1.3000e+00),
               DSPComplex( 5.0000e-01,  3.0000e-01),
               DSPComplex( 1.1000e+00, -2.0000e-01)],[
               DSPComplex( -0.7393353832652201, -0.1478670766530440),
               DSPComplex(  0.1909821993029451,  0.0381964398605890),
               DSPComplex( -1.7013834621383086, -0.3402766924276617),
               DSPComplex( -0.6157406339062349, -0.1231481267812470),
               DSPComplex(  0.7284888957799757, -0.8450116344193997),
               DSPComplex(  0.0194999577542784,  0.2598161386168021),
               DSPComplex( -0.7555450873091838, -2.4309628567271702),
               DSPComplex( -0.5148340361931273, -0.9280592566729803),
               DSPComplex(  0.2161568611325566,  0.6733975332035558),
               DSPComplex(  0.0839518201284991,  0.1322999766902112),
               DSPComplex( -0.6315273751217851, -1.9349833522993918),
               DSPComplex( -0.1802738843582426, -1.0140990020385570),
               DSPComplex( -0.6633477953463869,  1.2345872139588425),
               DSPComplex(  0.2389286180406733, -0.0208875205761288),
               DSPComplex( -2.4194326982205623,  0.0115301585066081),
               DSPComplex( -0.9963057787840456, -0.0682465221110653)])

    }

    func testDecimateComplexReal_M2h4x20() {
        runTest(1,
                [    0.031235809409,
                    -0.216021656042,
                    -0.123125426658,
                     0.014724190886],
                2,
                 [  DSPComplex(-0.121360059018, -0.040946328225),
                    DSPComplex(-0.048183917318, -0.090893384286),
                    DSPComplex( 0.050431539967, -0.039477767743),
                    DSPComplex(-0.092873851447, -0.016290157417),
                    DSPComplex( 0.067927836995,  0.034766499357),
                    DSPComplex(-0.062738323035, -0.070124552362),
                    DSPComplex(-0.089685845706,  0.085063483262),
                    DSPComplex( 0.036320846361,  0.192249836854),
                    DSPComplex(-0.097540647206, -0.078675689987),
                    DSPComplex( 0.062450869382,  0.091837474249),
                    DSPComplex(-0.062450045345, -0.029363766863),
                    DSPComplex(-0.030191356564,  0.094898259922),
                    DSPComplex( 0.130002759179, -0.034950407712),
                    DSPComplex( 0.030652983878,  0.015398314893),
                    DSPComplex(-0.028490871597,  0.130293581637),
                    DSPComplex( 0.114396819866, -0.058213046230),
                    DSPComplex(-0.090569184709, -0.080687388201),
                    DSPComplex(-0.002440656567,  0.093805498501),
                    DSPComplex( 0.181551012573,  0.015635958339),
                    DSPComplex( 0.081568978667,  0.051967040191)],
                [   DSPComplex(-0.003790779673, -0.001278991704),
                    DSPComplex( 0.026926548630,  0.023443353500),
                    DSPComplex( 0.015265670091,  0.008127371986),
                    DSPComplex( 0.001020290227,  0.013284949227),
                    DSPComplex(-0.000774013472, -0.055493631953),
                    DSPComplex(-0.002896889061, -0.008238383106),
                    DSPComplex( 0.019191455251, -0.016624124713),
                    DSPComplex(-0.023962832263,  0.006444039955),
                    DSPComplex(-0.023581901158, -0.005760782332),
                    DSPComplex( 0.019033897622, -0.010698088224)])
        }

    func testDecimateComplexReal_M3h7x30() {
        runTest(1,
                [   -0.067137698321,
                     0.054412252965,
                    -0.182856503708,
                    -0.054617127674,
                    -0.009870765494,
                    -0.026617010237,
                     0.011725565067],
                3,
                [   DSPComplex(-0.088297122268,  0.055665944654),
                    DSPComplex(-0.016432697221,  0.148455554729),
                    DSPComplex( 0.140757522457,  0.073543902343),
                    DSPComplex( 0.063460474341,  0.032803595179),
                    DSPComplex(-0.010344707877, -0.062988102121),
                    DSPComplex( 0.039529652200, -0.054529222034),
                    DSPComplex( 0.119571808389, -0.098769254813),
                    DSPComplex( 0.014024766895, -0.018877394409),
                    DSPComplex( 0.075151006910, -0.136112320307),
                    DSPComplex( 0.167466666363,  0.037009456983),
                    DSPComplex(-0.006066715214,  0.052827861682),
                    DSPComplex( 0.048336909246, -0.157938756841),
                    DSPComplex( 0.022542224668,  0.123894877722),
                    DSPComplex(-0.109162126495, -0.080322251267),
                    DSPComplex( 0.060401040885, -0.013549823453),
                    DSPComplex(-0.065450090580,  0.134084060551),
                    DSPComplex( 0.080552956850, -0.129409082705),
                    DSPComplex(-0.054479718117, -0.047011198746),
                    DSPComplex( 0.186369060662, -0.125658475188),
                    DSPComplex(-0.191665411586, -0.030921221765),
                    DSPComplex( 0.063129882080,  0.100182552563),
                    DSPComplex( 0.065520569371, -0.107290345371),
                    DSPComplex( 0.146258184364, -0.041133067761),
                    DSPComplex( 0.048045169203,  0.040835459595),
                    DSPComplex( 0.006679291241,  0.024648912594),
                    DSPComplex( 0.038593404874, -0.254488576034),
                    DSPComplex(-0.176346189965, -0.001937288661),
                    DSPComplex(-0.171141933206, -0.024023949503),
                    DSPComplex( 0.216869453975,  0.054039885226),
                    DSPComplex( 0.165978694869, -0.091956658785)],
                 [  DSPComplex( 0.005928065557, -0.003737283399),
                    DSPComplex( 0.011225704498, -0.028387046159),
                    DSPComplex(-0.009438639157,  0.009365565615),
                    DSPComplex(-0.015620112302,  0.001554880391),
                    DSPComplex(-0.006633571221, -0.027905221566),
                    DSPComplex( 0.028058535196, -0.001231894454),
                    DSPComplex(-0.024058004824,  0.025942864482),
                    DSPComplex( 0.021530701506,  0.030652367492),
                    DSPComplex(-0.021493289366,  0.012309152915),
                    DSPComplex(-0.009126109290,  0.046129860989)])
        }

    func testDecimateComplexReal_M4h13x40() {
        runTest(1,
                [   -0.017634479811,
                     0.078644323992,
                     0.010062975901,
                     0.002767448419,
                    -0.012666798459,
                     0.072474187801,
                     0.138641311321,
                     0.096895207192,
                     0.005424669952,
                    -0.095669120702,
                     0.115011527536,
                     0.045576979285,
                    -0.032175124851],
                4,
                [  DSPComplex(-0.112962750920, -0.174396579717),
                   DSPComplex( 0.036553706748, -0.051072169083),
                   DSPComplex( 0.022797265387,  0.042572931849),
                   DSPComplex( 0.008765340086,  0.005707935306),
                   DSPComplex( 0.106501635473, -0.087740150292),
                   DSPComplex(-0.021475975887,  0.041386858553),
                   DSPComplex(-0.140639585019,  0.075707242551),
                   DSPComplex(-0.170100822245,  0.024811268189),
                   DSPComplex( 0.077084240435,  0.022103264096),
                   DSPComplex(-0.034031018357,  0.008016611966),
                   DSPComplex( 0.042615847754, -0.119291859183),
                   DSPComplex( 0.004089922446,  0.056510429034),
                   DSPComplex( 0.145879823424,  0.102239060582),
                   DSPComplex( 0.131816984427, -0.085645947698),
                   DSPComplex(-0.118561232326,  0.150671338454),
                   DSPComplex(-0.032855598424,  0.084885603624),
                   DSPComplex(-0.029028910328,  0.095508389514),
                   DSPComplex( 0.162474927440, -0.002144805045),
                   DSPComplex(-0.066178053685, -0.010931400887),
                   DSPComplex(-0.164098083762, -0.014709199385),
                   DSPComplex(-0.042421547313, -0.165166102873),
                   DSPComplex(-0.143613555453, -0.020483960094),
                   DSPComplex( 0.074273402726,  0.026166548871),
                   DSPComplex( 0.039546848666,  0.060817356400),
                   DSPComplex(-0.283154531123, -0.068141024882),
                   DSPComplex(-0.171382954008,  0.157655929741),
                   DSPComplex( 0.100887524169, -0.227019774244),
                   DSPComplex(-0.134270894830, -0.095892207602),
                   DSPComplex( 0.061905242843, -0.098697402618),
                   DSPComplex( 0.070002196277,  0.099716632447),
                   DSPComplex(-0.111631217405, -0.033672309864),
                   DSPComplex(-0.042616607537, -0.111931082366),
                   DSPComplex(-0.004433766647, -0.118350103892),
                   DSPComplex(-0.029922536821,  0.288101612082),
                   DSPComplex( 0.112347437422,  0.012061775097),
                   DSPComplex( 0.121008925435,  0.081465180909),
                   DSPComplex(-0.022480348602,  0.032724942501),
                   DSPComplex(-0.057932648610,  0.146711091659),
                   DSPComplex( 0.091043924052, -0.118961124120),
                   DSPComplex(-0.060921349688, -0.036527277081)],
                [  DSPComplex( 0.001992039351,  0.003075392964),
                   DSPComplex( 0.000572688534,  0.004492265743),
                   DSPComplex(-0.010835528800,  0.003970601587),
                   DSPComplex(-0.029138197244,  0.024645444782),
                   DSPComplex(-0.005729955161,  0.004471983412),
                   DSPComplex(-0.016781980003,  0.000255273787),
                   DSPComplex(-0.005670110185,  0.008026992933),
                   DSPComplex( 0.007921191245, -0.004652046754),
                   DSPComplex(-0.019294993452, -0.027474217637),
                   DSPComplex( 0.025318608692, -0.002964377998)])
        }

    func testDecimateComplexReal_M5h23x50() {
        runTest(1,
                [    0.002280218687,
                     0.030259168999,
                     0.042315352513,
                     0.023335125905,
                     0.187877503860,
                    -0.125992843938,
                     0.011263591538,
                     0.085275043313,
                    -0.000421564647,
                    -0.061084018425,
                    -0.061455696212,
                    -0.019398732964,
                     0.054084065833,
                    -0.139019814895,
                    -0.006954271771,
                     0.066739670458,
                     0.060380686235,
                    -0.030379569378,
                     0.062093917175,
                    -0.108597003256,
                    -0.026039280890,
                    -0.061515114912,
                     0.038253839794],
                5,
                [   DSPComplex(-0.182183709645, -0.105810548671),
                    DSPComplex(-0.119835664561,  0.052187599214),
                    DSPComplex(-0.080413311444, -0.007654126449),
                    DSPComplex( 0.097423911392,  0.139994199967),
                    DSPComplex( 0.227363312459,  0.148762801146),
                    DSPComplex(-0.035703226649,  0.016200983468),
                    DSPComplex( 0.112245547440, -0.012233367286),
                    DSPComplex( 0.048367738935, -0.084918284786),
                    DSPComplex( 0.014605478600, -0.020568647750),
                    DSPComplex(-0.097889245398,  0.168068267634),
                    DSPComplex( 0.049395920002,  0.049056756925),
                    DSPComplex( 0.077571659414, -0.016603490981),
                    DSPComplex(-0.184216448023,  0.038356590636),
                    DSPComplex(-0.001919304196,  0.044652884985),
                    DSPComplex(-0.137958101403,  0.039437297572),
                    DSPComplex(-0.014249713446, -0.012873748415),
                    DSPComplex( 0.080615138558,  0.010722054400),
                    DSPComplex( 0.163287071747,  0.157849778887),
                    DSPComplex( 0.014760203683,  0.017904920717),
                    DSPComplex(-0.023896962586, -0.167898683088),
                    DSPComplex(-0.103145190697, -0.052205104745),
                    DSPComplex( 0.060639622041,  0.000262344853),
                    DSPComplex(-0.103152379379,  0.094308639066),
                    DSPComplex( 0.087724817642,  0.138912843443),
                    DSPComplex( 0.118286611822, -0.059245080063),
                    DSPComplex( 0.072397607400,  0.055570352604),
                    DSPComplex(-0.120828136006, -0.053193491502),
                    DSPComplex( 0.017568748356,  0.062747031152),
                    DSPComplex(-0.173562312809,  0.024099395003),
                    DSPComplex( 0.029150371763,  0.142074561483),
                    DSPComplex( 0.025859464873,  0.055295550529),
                    DSPComplex( 0.033521057962,  0.015990392806),
                    DSPComplex(-0.153314777647,  0.029921210372),
                    DSPComplex(-0.083426782876,  0.085727794977),
                    DSPComplex(-0.082913880724,  0.118554053112),
                    DSPComplex(-0.000295266978,  0.046816730776),
                    DSPComplex(-0.091635622603, -0.074886539618),
                    DSPComplex( 0.187307078036,  0.079033670911),
                    DSPComplex( 0.016483267210,  0.214994027303),
                    DSPComplex( 0.182841584926, -0.060579741754),
                    DSPComplex( 0.098946994244,  0.014088074701),
                    DSPComplex( 0.103226498009, -0.107310190377),
                    DSPComplex(-0.102346312686, -0.043967864658),
                    DSPComplex( 0.003356469485,  0.080001448898),
                    DSPComplex( 0.015380876414, -0.033386312073),
                    DSPComplex( 0.113435756454,  0.076011600452),
                    DSPComplex( 0.222681717597, -0.048179807062),
                    DSPComplex( 0.213685265876,  0.154819154890),
                    DSPComplex(-0.145263809029,  0.080441672618),
                    DSPComplex(-0.065703128284,  0.056608305388)],
                [   DSPComplex(-0.000415418699, -0.000241271190),
                    DSPComplex( 0.009483904304,  0.033419922261),
                    DSPComplex( 0.053902979681,  0.014937609575),
                    DSPComplex(-0.004064163171, -0.007100167361),
                    DSPComplex( 0.027338357030,  0.015054094814),
                    DSPComplex( 0.032378938500,  0.015062971531),
                    DSPComplex(-0.072114751319, -0.021601257083),
                    DSPComplex(-0.000363929634, -0.002841410024),
                    DSPComplex(-0.028488318939, -0.002263371809),
                    DSPComplex( 0.049749343516,  0.025688357259)])
        }
// Complex coefficients is not implemented

    let firdecim_cccf_data_M2h4x20_h = [
       DSPComplex(-0.010020822840,  0.161896349165),
       DSPComplex(-0.160666600378, -0.002813281324),
       DSPComplex( 0.074990149666, -0.043630565869),
       DSPComplex(-0.147489652317, -0.117556939153)]

    let firdecim_cccf_data_M2h4x20_x = [
       DSPComplex(-0.062219283216,  0.083707729807),
       DSPComplex( 0.142772365864, -0.155087351763),
       DSPComplex(-0.035707773590, -0.015572103950),
       DSPComplex( 0.031591519635, -0.047093660211),
       DSPComplex(-0.037688362501, -0.218679837029),
       DSPComplex(-0.138226220905,  0.033491576346),
       DSPComplex( 0.021866054096, -0.113640931250),
       DSPComplex( 0.067925963478,  0.054442249893),
       DSPComplex( 0.057780733571, -0.143139771263),
       DSPComplex(-0.066200531759, -0.072426438814),
       DSPComplex(-0.024130609496, -0.023984088453),
       DSPComplex( 0.021066337898,  0.123433455812),
       DSPComplex( 0.036017867444,  0.011208051823),
       DSPComplex( 0.151336512188, -0.046531046794),
       DSPComplex(-0.073914188474, -0.026770749988),
       DSPComplex(-0.035715003742, -0.020256147810),
       DSPComplex(-0.126178961558,  0.049437469177),
       DSPComplex(-0.105599807940, -0.032488566671),
       DSPComplex( 0.008377427496, -0.015424316799),
       DSPComplex(-0.115074264949,  0.025508983239)]

    let firdecim_cccf_data_M2h4x20_y = [
       DSPComplex(-0.012928487438, -0.010911895131),
       DSPComplex(-0.021509784691,  0.027882703574),
       DSPComplex(-0.012073246090,  0.010047339289),
       DSPComplex( 0.017918504479, -0.011835742405),
       DSPComplex( 0.032840148626,  0.003684533788),
       DSPComplex( 0.009026607516, -0.021113482694),
       DSPComplex(-0.006819209614,  0.003546692017),
       DSPComplex(-0.004777468860, -0.026060577544),
       DSPComplex(-0.035559582789, -0.027278788500),
       DSPComplex( 0.014869302818,  0.023426450224)]

    let firdecim_cccf_data_M3h7x30_h = [
       DSPComplex(-0.006640626991,  0.118904206653),
       DSPComplex(-0.083146000558, -0.275130943103),
       DSPComplex( 0.079550052655,  0.061532677877),
       DSPComplex( 0.065868508847,  0.151901113121),
       DSPComplex( 0.044201174511,  0.012455933659),
       DSPComplex( 0.055782888955,  0.071073047549),
       DSPComplex(-0.102933394297, -0.076862023914)]

    let firdecim_cccf_data_M3h7x30_x = [
       DSPComplex( 0.069053975334, -0.000060226964),
       DSPComplex( 0.052934817246,  0.026246887839),
       DSPComplex(-0.008314557685,  0.123860251104),
       DSPComplex( 0.013641467876, -0.040765094693),
       DSPComplex( 0.054181459433,  0.105277320749),
       DSPComplex( 0.068589348571, -0.094171049027),
       DSPComplex(-0.186652190115, -0.131382418642),
       DSPComplex(-0.166555782200,  0.069458887805),
       DSPComplex( 0.041855583632, -0.063553427322),
       DSPComplex(-0.100690278440, -0.092501422890),
       DSPComplex( 0.083259362864, -0.058212988803),
       DSPComplex( 0.105969639897, -0.053978459405),
       DSPComplex(-0.056835014832, -0.111112267168),
       DSPComplex( 0.030289623782, -0.152387642602),
       DSPComplex( 0.065445845678, -0.096149080571),
       DSPComplex( 0.111690055005, -0.006676373032),
       DSPComplex(-0.003193339244, -0.073652552575),
       DSPComplex(-0.250738405778,  0.063945369804),
       DSPComplex( 0.082690418566,  0.008257821532),
       DSPComplex(-0.012580995920, -0.092904421381),
       DSPComplex(-0.042140374030, -0.035352352256),
       DSPComplex(-0.102518977358, -0.014894177307),
       DSPComplex(-0.080456903607, -0.102303385723),
       DSPComplex( 0.067967690554, -0.008961243903),
       DSPComplex(-0.008051789902, -0.288191500473),
       DSPComplex( 0.052113077407,  0.045119892331),
       DSPComplex( 0.026292838395, -0.234398783970),
       DSPComplex( 0.043314256874,  0.060501473229),
       DSPComplex(-0.063513872529, -0.087941912765),
       DSPComplex(-0.065933510466,  0.101592986516)]

    let firdecim_cccf_data_M3h7x30_y = [
       DSPComplex(-0.000451400453,  0.008211208098),
       DSPComplex( 0.046679220394,  0.009712412319),
       DSPComplex(-0.017763427623, -0.015970470090),
       DSPComplex(-0.023951776164, -0.049756621013),
       DSPComplex( 0.005079568893, -0.033963764074),
       DSPComplex( 0.010470512110, -0.004032766261),
       DSPComplex( 0.063479867902,  0.089940072424),
       DSPComplex(-0.013695440245, -0.005147235363),
       DSPComplex( 0.018210209849, -0.062011233592),
       DSPComplex(-0.014235918784,  0.002032286514)]

    let firdecim_cccf_data_M4h13x40_h = [
       DSPComplex(-0.002562542003, -0.154124323834),
       DSPComplex(-0.023583498668,  0.104733275459),
       DSPComplex( 0.022367426058, -0.120923475320),
       DSPComplex(-0.132621145254, -0.178735883634),
       DSPComplex(-0.168112709779,  0.034712075125),
       DSPComplex( 0.057724042805,  0.008285579385),
       DSPComplex(-0.047739385482,  0.142477282131),
       DSPComplex( 0.067869682601,  0.097364083820),
       DSPComplex( 0.059426213111,  0.468175487351),
       DSPComplex( 0.006482342651, -0.003418897658),
       DSPComplex(-0.004209444510, -0.083952075513),
       DSPComplex( 0.011361818419, -0.070937481458),
       DSPComplex( 0.094086356591, -0.103332276920)]

    let firdecim_cccf_data_M4h13x40_x = [
       DSPComplex(-0.024194231006, -0.138925187631),
       DSPComplex( 0.203856156849, -0.080078393335),
       DSPComplex(-0.068961728054,  0.201298529466),
       DSPComplex(-0.051809449253,  0.046347258011),
       DSPComplex(-0.149903686678, -0.212870505681),
       DSPComplex( 0.029836494947, -0.048639942573),
       DSPComplex( 0.037533241642, -0.206079736569),
       DSPComplex( 0.051371569347, -0.039092683420),
       DSPComplex(-0.090350663461,  0.047672789069),
       DSPComplex(-0.156001075276,  0.148239674685),
       DSPComplex( 0.151211606918, -0.081137753153),
       DSPComplex( 0.014410288934, -0.091766222951),
       DSPComplex( 0.128650669104, -0.109361279278),
       DSPComplex(-0.014454025380, -0.017884354391),
       DSPComplex(-0.027777545721,  0.014889779800),
       DSPComplex(-0.102482421038,  0.153280094094),
       DSPComplex( 0.054231085410, -0.036048916993),
       DSPComplex(-0.097774825326,  0.071640661283),
       DSPComplex( 0.016069399348, -0.072264453423),
       DSPComplex(-0.020335452514, -0.102705025246),
       DSPComplex(-0.001428129588,  0.058319600411),
       DSPComplex( 0.050490262274,  0.068382581850),
       DSPComplex( 0.037146918761, -0.014078089282),
       DSPComplex( 0.131825401964, -0.052212284043),
       DSPComplex(-0.021358931115,  0.034076612121),
       DSPComplex( 0.007883745543, -0.045225145346),
       DSPComplex( 0.066077716475, -0.011748246722),
       DSPComplex( 0.020987892322,  0.148992296687),
       DSPComplex( 0.046814707826, -0.080934756420),
       DSPComplex( 0.092525039263,  0.149989890332),
       DSPComplex( 0.063112963675, -0.084774798237),
       DSPComplex(-0.019463083228,  0.059819778564),
       DSPComplex(-0.026299503842, -0.005553793151),
       DSPComplex( 0.135276140520, -0.011249885171),
       DSPComplex(-0.055971818305, -0.061539002690),
       DSPComplex( 0.041589677363,  0.218745686754),
       DSPComplex(-0.154541640002,  0.176344746584),
       DSPComplex(-0.093756310243,  0.038311802363),
       DSPComplex( 0.075234897328,  0.138257000400),
       DSPComplex(-0.097930194448, -0.076486145877)]

    let firdecim_cccf_data_M4h13x40_y = [
       DSPComplex(-0.021349751874,  0.004084921123),
       DSPComplex(-0.045716199011,  0.026670647628),
       DSPComplex( 0.062793796326,  0.020298966406),
       DSPComplex( 0.171764657602, -0.129296598427),
       DSPComplex(-0.140510571307, -0.025391053246),
       DSPComplex( 0.078880319262,  0.080737389437),
       DSPComplex( 0.026829099733, -0.015427110029),
       DSPComplex(-0.058971359279, -0.004947680884),
       DSPComplex(-0.009091338962, -0.022653029705),
       DSPComplex( 0.017223757651,  0.057653177650)]

    let firdecim_cccf_data_M5h23x50_h = [
       DSPComplex( 0.105720400924,  0.057437069192),
       DSPComplex(-0.028209083196, -0.004313504575),
       DSPComplex(-0.072874560021,  0.042888303750),
       DSPComplex(-0.085512857926,  0.020535437583),
       DSPComplex(-0.100456191359,  0.103253822583),
       DSPComplex( 0.021202177209,  0.035197979854),
       DSPComplex(-0.181412547496, -0.065280832354),
       DSPComplex(-0.089735489990, -0.035169413725),
       DSPComplex( 0.091350151539,  0.024388575583),
       DSPComplex( 0.115625359788, -0.072145623875),
       DSPComplex(-0.051852629863, -0.004567932396),
       DSPComplex( 0.009526328844, -0.150554350114),
       DSPComplex( 0.111472545344,  0.100620569627),
       DSPComplex( 0.072732704374, -0.028216475627),
       DSPComplex(-0.041864189108,  0.010588416120),
       DSPComplex( 0.050598746124, -0.003896637950),
       DSPComplex(-0.118777133157,  0.070610240227),
       DSPComplex(-0.016104655770,  0.004328632751),
       DSPComplex( 0.057125599610,  0.100422001833),
       DSPComplex( 0.154824278727, -0.040505357012),
       DSPComplex( 0.019585396789,  0.108879628006),
       DSPComplex( 0.052374918456, -0.044109539660),
       DSPComplex( 0.013011637257, -0.076892387668)]

    let firdecim_cccf_data_M5h23x50_x = [
       DSPComplex(-0.045706059285, -0.026925548272),
       DSPComplex( 0.074640818692,  0.020008220501),
       DSPComplex(-0.041286610033, -0.136882935267),
       DSPComplex( 0.009816935182, -0.078646240225),
       DSPComplex( 0.089010380616, -0.149190270600),
       DSPComplex( 0.083497556154, -0.043557829025),
       DSPComplex( 0.182551809767, -0.029983057525),
       DSPComplex( 0.156019880201,  0.005770028753),
       DSPComplex( 0.061786541086, -0.064921440736),
       DSPComplex( 0.243601293648,  0.048234370911),
       DSPComplex(-0.038392905410,  0.026874189965),
       DSPComplex( 0.098986088062, -0.051036508330),
       DSPComplex( 0.145073787044,  0.133408806994),
       DSPComplex(-0.012274691331, -0.001003240627),
       DSPComplex(-0.047977493556,  0.090394581449),
       DSPComplex( 0.067234934373, -0.080081570574),
       DSPComplex(-0.066259448979,  0.124203939183),
       DSPComplex(-0.107414957417, -0.017911178063),
       DSPComplex(-0.035170912051, -0.011180346308),
       DSPComplex( 0.087106081663,  0.108450957223),
       DSPComplex(-0.071732901242, -0.054445545216),
       DSPComplex(-0.027106150089,  0.035717288781),
       DSPComplex( 0.008967266976, -0.124029666988),
       DSPComplex(-0.027842462142,  0.016454828477),
       DSPComplex( 0.035515455355,  0.042131771080),
       DSPComplex( 0.012844114428,  0.106011213637),
       DSPComplex( 0.081631987459,  0.062426819327),
       DSPComplex( 0.130657890629, -0.002602075127),
       DSPComplex(-0.094246564430, -0.033523978166),
       DSPComplex(-0.053733329944,  0.108359828647),
       DSPComplex(-0.005664508011,  0.021469330759),
       DSPComplex(-0.014929153350,  0.017941698073),
       DSPComplex( 0.020461861960, -0.100937164479),
       DSPComplex( 0.001605545133,  0.153966424471),
       DSPComplex(-0.042286310689, -0.074770813879),
       DSPComplex( 0.171684109561,  0.076554260668),
       DSPComplex( 0.175238329863,  0.075856527238),
       DSPComplex( 0.060276983038, -0.075910005194),
       DSPComplex( 0.009291016375, -0.012009065640),
       DSPComplex( 0.165631852407, -0.056358816657),
       DSPComplex( 0.022403278379, -0.053838057764),
       DSPComplex( 0.012578774881, -0.028070849755),
       DSPComplex( 0.111896323878, -0.067413483086),
       DSPComplex( 0.193577629326,  0.022715731850),
       DSPComplex(-0.024575467522, -0.001589364951),
       DSPComplex( 0.049219675943, -0.168094546969),
       DSPComplex(-0.052368096464,  0.158302243383),
       DSPComplex( 0.029964399158, -0.012022357247),
       DSPComplex( 0.126368745124,  0.002307518720),
       DSPComplex( 0.014850257877,  0.006988676981)]

    let firdecim_cccf_data_M5h23x50_y = [
       DSPComplex(-0.003285538333, -0.005471801848),
       DSPComplex( 0.007588480326,  0.024542591101),
       DSPComplex(-0.057029837651,  0.045181309977),
       DSPComplex(-0.052759259646, -0.065315303001),
       DSPComplex( 0.096950584899, -0.077249583961),
       DSPComplex( 0.000722131494,  0.033051673725),
       DSPComplex( 0.010653757445, -0.053755642413),
       DSPComplex( 0.037166575400,  0.001442464438),
       DSPComplex( 0.015685676896,  0.008079773457),
       DSPComplex(-0.025642858413,  0.014281592109)]

}
